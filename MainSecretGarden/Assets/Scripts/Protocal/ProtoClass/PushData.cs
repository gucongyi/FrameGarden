// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PushData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Game.Protocal {

  /// <summary>Holder for reflection information generated from PushData.proto</summary>
  public static partial class PushDataReflection {

    #region Descriptor
    /// <summary>File descriptor for PushData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PushDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5QdXNoRGF0YS5wcm90bxINR2FtZS5Qcm90b2NhbBoORW51bVR5cGUucHJv",
            "dG8iMQoMU0NQcm9wU3RydWN0Eg8KB0dvb2RzSWQYASABKAUSEAoIR29vZHNO",
            "dW0YAiABKAUiwQEKCk1haWxTdHJ1Y3QSEQoJTWFpbFRpdGxlGAEgASgFEhMK",
            "C01haWxDb250ZW50GAIgASgFEhEKCVN1YmhlYWRJRBgDIAEoBRItCghQcm9w",
            "SW5mbxgEIAMoCzIbLkdhbWUuUHJvdG9jYWwuU0NQcm9wU3RydWN0Eg4KBk1h",
            "aWxJRBgFIAEoBRIRCglBZGRyZXNzZXIYBiABKAUSEAoIQ29uZmlnSUQYByAB",
            "KAUSFAoMRGlzYWJsZWRUaW1lGAggASgDIkMKEVNDU2VuZE1haWxQdXNoTXNn",
            "Ei4KC01haWxJbmZvTXNnGAEgASgLMhkuR2FtZS5Qcm90b2NhbC5NYWlsU3Ry",
            "dWN0IhQKElNDRW10cHlNYWlsUHVzaE1zZyJ0ChJTQ0ZyaWVuZFB1c2hTdHJ1",
            "Y3QSCwoDVWlkGAEgASgDEhIKCkZyaWVuZE5hbWUYAiABKAkSGAoQRnJpZW5k",
            "RXhwZXJpZW5jZRgDIAEoBRITCgtGcmllbmRJbWFnZRgEIAEoBRIOCgZPbmxp",
            "bmUYBSABKAgiTwoUU0NGcmllbmRBcHBseVB1c2hNc2cSNwoMQXBwbHlQdXNo",
            "TXNnGAEgASgLMiEuR2FtZS5Qcm90b2NhbC5TQ0ZyaWVuZFB1c2hTdHJ1Y3Qi",
            "UQoVU0NGcmllbmRBY2NlcHRQdXNoTXNnEjgKDUFjY2VwdFB1c2hNc2cYASAB",
            "KAsyIS5HYW1lLlByb3RvY2FsLlNDRnJpZW5kUHVzaFN0cnVjdCJTChZTQ0Zy",
            "aWVuZFJlcHVsc2VQdXNoTXNnEjkKDlJlcHVsc2VQdXNoTXNnGAEgASgLMiEu",
            "R2FtZS5Qcm90b2NhbC5TQ0ZyaWVuZFB1c2hTdHJ1Y3QiLQoVU0NGcmllbmRE",
            "ZWxldGVQdXNoTXNnEhQKDE9wZXJhdGlvblVpZBgBIAEoAyIzCg1TQ09yZGVy",
            "UmVzdWx0Eg8KB09yZGVySWQYASABKAkSEQoJSXNTdWNjZWVkGAIgASgIIrcB",
            "Cg5TQ05vdGVQdXNoTWVzcxIPCgdHb29kc0lkGAEgAygFEg8KB0FjY291bnQY",
            "AiABKAkSEQoJVm9pY2VNZXNzGAMgASgJEjkKC0dvb2RzU291cmNlGAQgASgO",
            "MiQuR2FtZS5Qcm90b2NhbC5QdXNoTm90aWNlR29vZHNTb3VyY2USNQoMTm90",
            "aWNlU291cmNlGAUgASgOMh8uR2FtZS5Qcm90b2NhbC5QdXNoTm90aWNlU291",
            "cmNlIlcKBlNDQ2hhdBILCgNVaWQYASABKAMSDAoETmFtZRgCIAEoCRINCgVJ",
            "bWFnZRgDIAEoBRIPCgdNZXNzYWdlGAQgASgJEhIKCkV4cGVyaWVuY2UYBSAB",
            "KAMiUgoSU0NFbnRyYW5jZVJvb21JbmZvEgsKA1VpZBgBIAEoAxIMCgROYW1l",
            "GAIgASgJEg4KBlJvb21JZBgDIAEoBRIRCglDb3N0dW1lSWQYBCABKAUiOwoO",
            "U0NNb3ZlTG9jYXRpb24SCwoDVWlkGAEgASgDEg0KBVhheGxlGAIgASgCEg0K",
            "BVlheGxlGAMgASgCIl8KGlNDcHVzaEd1ZXNzaW5nU3RhdHVzU3RydWN0Ei0K",
            "BlN0YXR1cxgBIAEoDjIdLkdhbWUuUHJvdG9jYWwuR3Vlc3NpbmdTdGF0dXMS",
            "EgoKU3RhdHVzVGltZRgCIAEoBSKLAQoUU0NwdXNoR3Vlc3NpbmdTdHJ1Y3QS",
            "KQoCSWQYASABKA4yHS5HYW1lLlByb3RvY2FsLkd1ZXNzaW5nTnVtYmVyEjkK",
            "BlN0YXR1cxgCIAMoCzIpLkdhbWUuUHJvdG9jYWwuU0NwdXNoR3Vlc3NpbmdT",
            "dGF0dXNTdHJ1Y3QSDQoFTWV0ZXIYAyABKAUi5QEKElNDcHVzaEd1ZXNzaW5n",
            "SW5mbxI8Cg9ndWVzc2luZ0luZm9PbmUYASADKAsyIy5HYW1lLlByb3RvY2Fs",
            "LlNDcHVzaEd1ZXNzaW5nU3RydWN0EjwKD2d1ZXNzaW5nSW5mb1R3bxgCIAMo",
            "CzIjLkdhbWUuUHJvdG9jYWwuU0NwdXNoR3Vlc3NpbmdTdHJ1Y3QSPgoRZ3Vl",
            "c3NpbmdJbmZvVGhyZWUYAyADKAsyIy5HYW1lLlByb3RvY2FsLlNDcHVzaEd1",
            "ZXNzaW5nU3RydWN0EhMKC0dhbWVFbmRUaW1lGAQgASgDIhoKDFNDcHVzaE1v",
            "dGlvbhIKCgJJZBgBIAEoBSIeCg9TQ0RlcGFydHVyZVJvb20SCwoDVWlkGAEg",
            "ASgDIiMKEFNDQWN0aXZpdHlGaW5pc2gSDwoHRW5kVGltZRgBIAEoAyIWChRT",
            "Q1JlcGV0aXRpb25SZWdpc3RlcmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Game.Protocal.EnumTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCPropStruct), global::Game.Protocal.SCPropStruct.Parser, new[]{ "GoodsId", "GoodsNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.MailStruct), global::Game.Protocal.MailStruct.Parser, new[]{ "MailTitle", "MailContent", "SubheadID", "PropInfo", "MailID", "Addresser", "ConfigID", "DisabledTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCSendMailPushMsg), global::Game.Protocal.SCSendMailPushMsg.Parser, new[]{ "MailInfoMsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCEmtpyMailPushMsg), global::Game.Protocal.SCEmtpyMailPushMsg.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCFriendPushStruct), global::Game.Protocal.SCFriendPushStruct.Parser, new[]{ "Uid", "FriendName", "FriendExperience", "FriendImage", "Online" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCFriendApplyPushMsg), global::Game.Protocal.SCFriendApplyPushMsg.Parser, new[]{ "ApplyPushMsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCFriendAcceptPushMsg), global::Game.Protocal.SCFriendAcceptPushMsg.Parser, new[]{ "AcceptPushMsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCFriendRepulsePushMsg), global::Game.Protocal.SCFriendRepulsePushMsg.Parser, new[]{ "RepulsePushMsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCFriendDeletePushMsg), global::Game.Protocal.SCFriendDeletePushMsg.Parser, new[]{ "OperationUid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCOrderResult), global::Game.Protocal.SCOrderResult.Parser, new[]{ "OrderId", "IsSucceed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCNotePushMess), global::Game.Protocal.SCNotePushMess.Parser, new[]{ "GoodsId", "Account", "VoiceMess", "GoodsSource", "NoticeSource" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCChat), global::Game.Protocal.SCChat.Parser, new[]{ "Uid", "Name", "Image", "Message", "Experience" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCEntranceRoomInfo), global::Game.Protocal.SCEntranceRoomInfo.Parser, new[]{ "Uid", "Name", "RoomId", "CostumeId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCMoveLocation), global::Game.Protocal.SCMoveLocation.Parser, new[]{ "Uid", "Xaxle", "Yaxle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCpushGuessingStatusStruct), global::Game.Protocal.SCpushGuessingStatusStruct.Parser, new[]{ "Status", "StatusTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCpushGuessingStruct), global::Game.Protocal.SCpushGuessingStruct.Parser, new[]{ "Id", "Status", "Meter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCpushGuessingInfo), global::Game.Protocal.SCpushGuessingInfo.Parser, new[]{ "GuessingInfoOne", "GuessingInfoTwo", "GuessingInfoThree", "GameEndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCpushMotion), global::Game.Protocal.SCpushMotion.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCDepartureRoom), global::Game.Protocal.SCDepartureRoom.Parser, new[]{ "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCActivityFinish), global::Game.Protocal.SCActivityFinish.Parser, new[]{ "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCRepetitionRegister), global::Game.Protocal.SCRepetitionRegister.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 道具类型
  /// </summary>
  public sealed partial class SCPropStruct : pb::IMessage<SCPropStruct> {
    private static readonly pb::MessageParser<SCPropStruct> _parser = new pb::MessageParser<SCPropStruct>(() => new SCPropStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPropStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropStruct(SCPropStruct other) : this() {
      goodsId_ = other.goodsId_;
      goodsNum_ = other.goodsNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropStruct Clone() {
      return new SCPropStruct(this);
    }

    /// <summary>Field number for the "GoodsId" field.</summary>
    public const int GoodsIdFieldNumber = 1;
    private int goodsId_;
    /// <summary>
    /// 商品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodsId {
      get { return goodsId_; }
      set {
        goodsId_ = value;
      }
    }

    /// <summary>Field number for the "GoodsNum" field.</summary>
    public const int GoodsNumFieldNumber = 2;
    private int goodsNum_;
    /// <summary>
    /// 商品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodsNum {
      get { return goodsNum_; }
      set {
        goodsNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPropStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPropStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GoodsId != other.GoodsId) return false;
      if (GoodsNum != other.GoodsNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GoodsId != 0) hash ^= GoodsId.GetHashCode();
      if (GoodsNum != 0) hash ^= GoodsNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GoodsId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GoodsId);
      }
      if (GoodsNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GoodsNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GoodsId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodsId);
      }
      if (GoodsNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodsNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPropStruct other) {
      if (other == null) {
        return;
      }
      if (other.GoodsId != 0) {
        GoodsId = other.GoodsId;
      }
      if (other.GoodsNum != 0) {
        GoodsNum = other.GoodsNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GoodsId = input.ReadInt32();
            break;
          }
          case 16: {
            GoodsNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 邮件推送结构
  /// </summary>
  public sealed partial class MailStruct : pb::IMessage<MailStruct> {
    private static readonly pb::MessageParser<MailStruct> _parser = new pb::MessageParser<MailStruct>(() => new MailStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MailStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailStruct(MailStruct other) : this() {
      mailTitle_ = other.mailTitle_;
      mailContent_ = other.mailContent_;
      subheadID_ = other.subheadID_;
      propInfo_ = other.propInfo_.Clone();
      mailID_ = other.mailID_;
      addresser_ = other.addresser_;
      configID_ = other.configID_;
      disabledTime_ = other.disabledTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailStruct Clone() {
      return new MailStruct(this);
    }

    /// <summary>Field number for the "MailTitle" field.</summary>
    public const int MailTitleFieldNumber = 1;
    private int mailTitle_;
    /// <summary>
    /// 邮件标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MailTitle {
      get { return mailTitle_; }
      set {
        mailTitle_ = value;
      }
    }

    /// <summary>Field number for the "MailContent" field.</summary>
    public const int MailContentFieldNumber = 2;
    private int mailContent_;
    /// <summary>
    /// 邮件内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MailContent {
      get { return mailContent_; }
      set {
        mailContent_ = value;
      }
    }

    /// <summary>Field number for the "SubheadID" field.</summary>
    public const int SubheadIDFieldNumber = 3;
    private int subheadID_;
    /// <summary>
    /// 邮件副标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubheadID {
      get { return subheadID_; }
      set {
        subheadID_ = value;
      }
    }

    /// <summary>Field number for the "PropInfo" field.</summary>
    public const int PropInfoFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Game.Protocal.SCPropStruct> _repeated_propInfo_codec
        = pb::FieldCodec.ForMessage(34, global::Game.Protocal.SCPropStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.SCPropStruct> propInfo_ = new pbc::RepeatedField<global::Game.Protocal.SCPropStruct>();
    /// <summary>
    /// 奖励道具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.SCPropStruct> PropInfo {
      get { return propInfo_; }
    }

    /// <summary>Field number for the "MailID" field.</summary>
    public const int MailIDFieldNumber = 5;
    private int mailID_;
    /// <summary>
    /// 邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MailID {
      get { return mailID_; }
      set {
        mailID_ = value;
      }
    }

    /// <summary>Field number for the "Addresser" field.</summary>
    public const int AddresserFieldNumber = 6;
    private int addresser_;
    /// <summary>
    /// 发件人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Addresser {
      get { return addresser_; }
      set {
        addresser_ = value;
      }
    }

    /// <summary>Field number for the "ConfigID" field.</summary>
    public const int ConfigIDFieldNumber = 7;
    private int configID_;
    /// <summary>
    /// 配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigID {
      get { return configID_; }
      set {
        configID_ = value;
      }
    }

    /// <summary>Field number for the "DisabledTime" field.</summary>
    public const int DisabledTimeFieldNumber = 8;
    private long disabledTime_;
    /// <summary>
    /// 失效时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DisabledTime {
      get { return disabledTime_; }
      set {
        disabledTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MailStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MailStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MailTitle != other.MailTitle) return false;
      if (MailContent != other.MailContent) return false;
      if (SubheadID != other.SubheadID) return false;
      if(!propInfo_.Equals(other.propInfo_)) return false;
      if (MailID != other.MailID) return false;
      if (Addresser != other.Addresser) return false;
      if (ConfigID != other.ConfigID) return false;
      if (DisabledTime != other.DisabledTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MailTitle != 0) hash ^= MailTitle.GetHashCode();
      if (MailContent != 0) hash ^= MailContent.GetHashCode();
      if (SubheadID != 0) hash ^= SubheadID.GetHashCode();
      hash ^= propInfo_.GetHashCode();
      if (MailID != 0) hash ^= MailID.GetHashCode();
      if (Addresser != 0) hash ^= Addresser.GetHashCode();
      if (ConfigID != 0) hash ^= ConfigID.GetHashCode();
      if (DisabledTime != 0L) hash ^= DisabledTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MailTitle != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MailTitle);
      }
      if (MailContent != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MailContent);
      }
      if (SubheadID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SubheadID);
      }
      propInfo_.WriteTo(output, _repeated_propInfo_codec);
      if (MailID != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MailID);
      }
      if (Addresser != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Addresser);
      }
      if (ConfigID != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ConfigID);
      }
      if (DisabledTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(DisabledTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MailTitle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MailTitle);
      }
      if (MailContent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MailContent);
      }
      if (SubheadID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubheadID);
      }
      size += propInfo_.CalculateSize(_repeated_propInfo_codec);
      if (MailID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MailID);
      }
      if (Addresser != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Addresser);
      }
      if (ConfigID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigID);
      }
      if (DisabledTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DisabledTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MailStruct other) {
      if (other == null) {
        return;
      }
      if (other.MailTitle != 0) {
        MailTitle = other.MailTitle;
      }
      if (other.MailContent != 0) {
        MailContent = other.MailContent;
      }
      if (other.SubheadID != 0) {
        SubheadID = other.SubheadID;
      }
      propInfo_.Add(other.propInfo_);
      if (other.MailID != 0) {
        MailID = other.MailID;
      }
      if (other.Addresser != 0) {
        Addresser = other.Addresser;
      }
      if (other.ConfigID != 0) {
        ConfigID = other.ConfigID;
      }
      if (other.DisabledTime != 0L) {
        DisabledTime = other.DisabledTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MailTitle = input.ReadInt32();
            break;
          }
          case 16: {
            MailContent = input.ReadInt32();
            break;
          }
          case 24: {
            SubheadID = input.ReadInt32();
            break;
          }
          case 34: {
            propInfo_.AddEntriesFrom(input, _repeated_propInfo_codec);
            break;
          }
          case 40: {
            MailID = input.ReadInt32();
            break;
          }
          case 48: {
            Addresser = input.ReadInt32();
            break;
          }
          case 56: {
            ConfigID = input.ReadInt32();
            break;
          }
          case 64: {
            DisabledTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 发送邮件
  /// </summary>
  public sealed partial class SCSendMailPushMsg : pb::IMessage<SCSendMailPushMsg> {
    private static readonly pb::MessageParser<SCSendMailPushMsg> _parser = new pb::MessageParser<SCSendMailPushMsg>(() => new SCSendMailPushMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSendMailPushMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSendMailPushMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSendMailPushMsg(SCSendMailPushMsg other) : this() {
      mailInfoMsg_ = other.mailInfoMsg_ != null ? other.mailInfoMsg_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSendMailPushMsg Clone() {
      return new SCSendMailPushMsg(this);
    }

    /// <summary>Field number for the "MailInfoMsg" field.</summary>
    public const int MailInfoMsgFieldNumber = 1;
    private global::Game.Protocal.MailStruct mailInfoMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.MailStruct MailInfoMsg {
      get { return mailInfoMsg_; }
      set {
        mailInfoMsg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSendMailPushMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSendMailPushMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MailInfoMsg, other.MailInfoMsg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mailInfoMsg_ != null) hash ^= MailInfoMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (mailInfoMsg_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MailInfoMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mailInfoMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MailInfoMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSendMailPushMsg other) {
      if (other == null) {
        return;
      }
      if (other.mailInfoMsg_ != null) {
        if (mailInfoMsg_ == null) {
          MailInfoMsg = new global::Game.Protocal.MailStruct();
        }
        MailInfoMsg.MergeFrom(other.MailInfoMsg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mailInfoMsg_ == null) {
              MailInfoMsg = new global::Game.Protocal.MailStruct();
            }
            input.ReadMessage(MailInfoMsg);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 通知客户端有新邮件
  /// </summary>
  public sealed partial class SCEmtpyMailPushMsg : pb::IMessage<SCEmtpyMailPushMsg> {
    private static readonly pb::MessageParser<SCEmtpyMailPushMsg> _parser = new pb::MessageParser<SCEmtpyMailPushMsg>(() => new SCEmtpyMailPushMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCEmtpyMailPushMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEmtpyMailPushMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEmtpyMailPushMsg(SCEmtpyMailPushMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEmtpyMailPushMsg Clone() {
      return new SCEmtpyMailPushMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCEmtpyMailPushMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCEmtpyMailPushMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCEmtpyMailPushMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 好友消息推送结构
  /// </summary>
  public sealed partial class SCFriendPushStruct : pb::IMessage<SCFriendPushStruct> {
    private static readonly pb::MessageParser<SCFriendPushStruct> _parser = new pb::MessageParser<SCFriendPushStruct>(() => new SCFriendPushStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCFriendPushStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendPushStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendPushStruct(SCFriendPushStruct other) : this() {
      uid_ = other.uid_;
      friendName_ = other.friendName_;
      friendExperience_ = other.friendExperience_;
      friendImage_ = other.friendImage_;
      online_ = other.online_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendPushStruct Clone() {
      return new SCFriendPushStruct(this);
    }

    /// <summary>Field number for the "Uid" field.</summary>
    public const int UidFieldNumber = 1;
    private long uid_;
    /// <summary>
    /// uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "FriendName" field.</summary>
    public const int FriendNameFieldNumber = 2;
    private string friendName_ = "";
    /// <summary>
    /// 昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendName {
      get { return friendName_; }
      set {
        friendName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FriendExperience" field.</summary>
    public const int FriendExperienceFieldNumber = 3;
    private int friendExperience_;
    /// <summary>
    /// 当前经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendExperience {
      get { return friendExperience_; }
      set {
        friendExperience_ = value;
      }
    }

    /// <summary>Field number for the "FriendImage" field.</summary>
    public const int FriendImageFieldNumber = 4;
    private int friendImage_;
    /// <summary>
    /// 头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendImage {
      get { return friendImage_; }
      set {
        friendImage_ = value;
      }
    }

    /// <summary>Field number for the "Online" field.</summary>
    public const int OnlineFieldNumber = 5;
    private bool online_;
    /// <summary>
    /// 在线状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Online {
      get { return online_; }
      set {
        online_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCFriendPushStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCFriendPushStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (FriendName != other.FriendName) return false;
      if (FriendExperience != other.FriendExperience) return false;
      if (FriendImage != other.FriendImage) return false;
      if (Online != other.Online) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0L) hash ^= Uid.GetHashCode();
      if (FriendName.Length != 0) hash ^= FriendName.GetHashCode();
      if (FriendExperience != 0) hash ^= FriendExperience.GetHashCode();
      if (FriendImage != 0) hash ^= FriendImage.GetHashCode();
      if (Online != false) hash ^= Online.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (FriendName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FriendName);
      }
      if (FriendExperience != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FriendExperience);
      }
      if (FriendImage != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FriendImage);
      }
      if (Online != false) {
        output.WriteRawTag(40);
        output.WriteBool(Online);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (FriendName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendName);
      }
      if (FriendExperience != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendExperience);
      }
      if (FriendImage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendImage);
      }
      if (Online != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCFriendPushStruct other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0L) {
        Uid = other.Uid;
      }
      if (other.FriendName.Length != 0) {
        FriendName = other.FriendName;
      }
      if (other.FriendExperience != 0) {
        FriendExperience = other.FriendExperience;
      }
      if (other.FriendImage != 0) {
        FriendImage = other.FriendImage;
      }
      if (other.Online != false) {
        Online = other.Online;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            FriendName = input.ReadString();
            break;
          }
          case 24: {
            FriendExperience = input.ReadInt32();
            break;
          }
          case 32: {
            FriendImage = input.ReadInt32();
            break;
          }
          case 40: {
            Online = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 申请
  /// </summary>
  public sealed partial class SCFriendApplyPushMsg : pb::IMessage<SCFriendApplyPushMsg> {
    private static readonly pb::MessageParser<SCFriendApplyPushMsg> _parser = new pb::MessageParser<SCFriendApplyPushMsg>(() => new SCFriendApplyPushMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCFriendApplyPushMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendApplyPushMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendApplyPushMsg(SCFriendApplyPushMsg other) : this() {
      applyPushMsg_ = other.applyPushMsg_ != null ? other.applyPushMsg_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendApplyPushMsg Clone() {
      return new SCFriendApplyPushMsg(this);
    }

    /// <summary>Field number for the "ApplyPushMsg" field.</summary>
    public const int ApplyPushMsgFieldNumber = 1;
    private global::Game.Protocal.SCFriendPushStruct applyPushMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.SCFriendPushStruct ApplyPushMsg {
      get { return applyPushMsg_; }
      set {
        applyPushMsg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCFriendApplyPushMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCFriendApplyPushMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ApplyPushMsg, other.ApplyPushMsg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (applyPushMsg_ != null) hash ^= ApplyPushMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (applyPushMsg_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ApplyPushMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (applyPushMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApplyPushMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCFriendApplyPushMsg other) {
      if (other == null) {
        return;
      }
      if (other.applyPushMsg_ != null) {
        if (applyPushMsg_ == null) {
          ApplyPushMsg = new global::Game.Protocal.SCFriendPushStruct();
        }
        ApplyPushMsg.MergeFrom(other.ApplyPushMsg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (applyPushMsg_ == null) {
              ApplyPushMsg = new global::Game.Protocal.SCFriendPushStruct();
            }
            input.ReadMessage(ApplyPushMsg);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///接受
  /// </summary>
  public sealed partial class SCFriendAcceptPushMsg : pb::IMessage<SCFriendAcceptPushMsg> {
    private static readonly pb::MessageParser<SCFriendAcceptPushMsg> _parser = new pb::MessageParser<SCFriendAcceptPushMsg>(() => new SCFriendAcceptPushMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCFriendAcceptPushMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendAcceptPushMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendAcceptPushMsg(SCFriendAcceptPushMsg other) : this() {
      acceptPushMsg_ = other.acceptPushMsg_ != null ? other.acceptPushMsg_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendAcceptPushMsg Clone() {
      return new SCFriendAcceptPushMsg(this);
    }

    /// <summary>Field number for the "AcceptPushMsg" field.</summary>
    public const int AcceptPushMsgFieldNumber = 1;
    private global::Game.Protocal.SCFriendPushStruct acceptPushMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.SCFriendPushStruct AcceptPushMsg {
      get { return acceptPushMsg_; }
      set {
        acceptPushMsg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCFriendAcceptPushMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCFriendAcceptPushMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AcceptPushMsg, other.AcceptPushMsg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (acceptPushMsg_ != null) hash ^= AcceptPushMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (acceptPushMsg_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AcceptPushMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (acceptPushMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AcceptPushMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCFriendAcceptPushMsg other) {
      if (other == null) {
        return;
      }
      if (other.acceptPushMsg_ != null) {
        if (acceptPushMsg_ == null) {
          AcceptPushMsg = new global::Game.Protocal.SCFriendPushStruct();
        }
        AcceptPushMsg.MergeFrom(other.AcceptPushMsg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (acceptPushMsg_ == null) {
              AcceptPushMsg = new global::Game.Protocal.SCFriendPushStruct();
            }
            input.ReadMessage(AcceptPushMsg);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 拒绝
  /// </summary>
  public sealed partial class SCFriendRepulsePushMsg : pb::IMessage<SCFriendRepulsePushMsg> {
    private static readonly pb::MessageParser<SCFriendRepulsePushMsg> _parser = new pb::MessageParser<SCFriendRepulsePushMsg>(() => new SCFriendRepulsePushMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCFriendRepulsePushMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendRepulsePushMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendRepulsePushMsg(SCFriendRepulsePushMsg other) : this() {
      repulsePushMsg_ = other.repulsePushMsg_ != null ? other.repulsePushMsg_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendRepulsePushMsg Clone() {
      return new SCFriendRepulsePushMsg(this);
    }

    /// <summary>Field number for the "RepulsePushMsg" field.</summary>
    public const int RepulsePushMsgFieldNumber = 1;
    private global::Game.Protocal.SCFriendPushStruct repulsePushMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.SCFriendPushStruct RepulsePushMsg {
      get { return repulsePushMsg_; }
      set {
        repulsePushMsg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCFriendRepulsePushMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCFriendRepulsePushMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RepulsePushMsg, other.RepulsePushMsg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (repulsePushMsg_ != null) hash ^= RepulsePushMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (repulsePushMsg_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RepulsePushMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (repulsePushMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RepulsePushMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCFriendRepulsePushMsg other) {
      if (other == null) {
        return;
      }
      if (other.repulsePushMsg_ != null) {
        if (repulsePushMsg_ == null) {
          RepulsePushMsg = new global::Game.Protocal.SCFriendPushStruct();
        }
        RepulsePushMsg.MergeFrom(other.RepulsePushMsg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (repulsePushMsg_ == null) {
              RepulsePushMsg = new global::Game.Protocal.SCFriendPushStruct();
            }
            input.ReadMessage(RepulsePushMsg);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 删除好友推送
  /// </summary>
  public sealed partial class SCFriendDeletePushMsg : pb::IMessage<SCFriendDeletePushMsg> {
    private static readonly pb::MessageParser<SCFriendDeletePushMsg> _parser = new pb::MessageParser<SCFriendDeletePushMsg>(() => new SCFriendDeletePushMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCFriendDeletePushMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendDeletePushMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendDeletePushMsg(SCFriendDeletePushMsg other) : this() {
      operationUid_ = other.operationUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendDeletePushMsg Clone() {
      return new SCFriendDeletePushMsg(this);
    }

    /// <summary>Field number for the "OperationUid" field.</summary>
    public const int OperationUidFieldNumber = 1;
    private long operationUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OperationUid {
      get { return operationUid_; }
      set {
        operationUid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCFriendDeletePushMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCFriendDeletePushMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperationUid != other.OperationUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OperationUid != 0L) hash ^= OperationUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OperationUid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OperationUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OperationUid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OperationUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCFriendDeletePushMsg other) {
      if (other == null) {
        return;
      }
      if (other.OperationUid != 0L) {
        OperationUid = other.OperationUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OperationUid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 订单充值结果
  /// </summary>
  public sealed partial class SCOrderResult : pb::IMessage<SCOrderResult> {
    private static readonly pb::MessageParser<SCOrderResult> _parser = new pb::MessageParser<SCOrderResult>(() => new SCOrderResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCOrderResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOrderResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOrderResult(SCOrderResult other) : this() {
      orderId_ = other.orderId_;
      isSucceed_ = other.isSucceed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOrderResult Clone() {
      return new SCOrderResult(this);
    }

    /// <summary>Field number for the "OrderId" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private string orderId_ = "";
    /// <summary>
    /// 订单id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSucceed" field.</summary>
    public const int IsSucceedFieldNumber = 2;
    private bool isSucceed_;
    /// <summary>
    /// 订单结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSucceed {
      get { return isSucceed_; }
      set {
        isSucceed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCOrderResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCOrderResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (IsSucceed != other.IsSucceed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (IsSucceed != false) hash ^= IsSucceed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
      if (IsSucceed != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSucceed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (IsSucceed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCOrderResult other) {
      if (other == null) {
        return;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      if (other.IsSucceed != false) {
        IsSucceed = other.IsSucceed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
          case 16: {
            IsSucceed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 公告信息推送
  /// </summary>
  public sealed partial class SCNotePushMess : pb::IMessage<SCNotePushMess> {
    private static readonly pb::MessageParser<SCNotePushMess> _parser = new pb::MessageParser<SCNotePushMess>(() => new SCNotePushMess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCNotePushMess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNotePushMess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNotePushMess(SCNotePushMess other) : this() {
      goodsId_ = other.goodsId_.Clone();
      account_ = other.account_;
      voiceMess_ = other.voiceMess_;
      goodsSource_ = other.goodsSource_;
      noticeSource_ = other.noticeSource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNotePushMess Clone() {
      return new SCNotePushMess(this);
    }

    /// <summary>Field number for the "GoodsId" field.</summary>
    public const int GoodsIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_goodsId_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> goodsId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 道具id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GoodsId {
      get { return goodsId_; }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 2;
    private string account_ = "";
    /// <summary>
    /// 玩家游戏名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VoiceMess" field.</summary>
    public const int VoiceMessFieldNumber = 3;
    private string voiceMess_ = "";
    /// <summary>
    /// 话筒消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VoiceMess {
      get { return voiceMess_; }
      set {
        voiceMess_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GoodsSource" field.</summary>
    public const int GoodsSourceFieldNumber = 4;
    private global::Game.Protocal.PushNoticeGoodsSource goodsSource_ = 0;
    /// <summary>
    /// 道具来源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.PushNoticeGoodsSource GoodsSource {
      get { return goodsSource_; }
      set {
        goodsSource_ = value;
      }
    }

    /// <summary>Field number for the "NoticeSource" field.</summary>
    public const int NoticeSourceFieldNumber = 5;
    private global::Game.Protocal.PushNoticeSource noticeSource_ = 0;
    /// <summary>
    /// 公告源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.PushNoticeSource NoticeSource {
      get { return noticeSource_; }
      set {
        noticeSource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCNotePushMess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCNotePushMess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!goodsId_.Equals(other.goodsId_)) return false;
      if (Account != other.Account) return false;
      if (VoiceMess != other.VoiceMess) return false;
      if (GoodsSource != other.GoodsSource) return false;
      if (NoticeSource != other.NoticeSource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= goodsId_.GetHashCode();
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (VoiceMess.Length != 0) hash ^= VoiceMess.GetHashCode();
      if (GoodsSource != 0) hash ^= GoodsSource.GetHashCode();
      if (NoticeSource != 0) hash ^= NoticeSource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      goodsId_.WriteTo(output, _repeated_goodsId_codec);
      if (Account.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Account);
      }
      if (VoiceMess.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VoiceMess);
      }
      if (GoodsSource != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GoodsSource);
      }
      if (NoticeSource != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) NoticeSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += goodsId_.CalculateSize(_repeated_goodsId_codec);
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (VoiceMess.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VoiceMess);
      }
      if (GoodsSource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GoodsSource);
      }
      if (NoticeSource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NoticeSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCNotePushMess other) {
      if (other == null) {
        return;
      }
      goodsId_.Add(other.goodsId_);
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.VoiceMess.Length != 0) {
        VoiceMess = other.VoiceMess;
      }
      if (other.GoodsSource != 0) {
        GoodsSource = other.GoodsSource;
      }
      if (other.NoticeSource != 0) {
        NoticeSource = other.NoticeSource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            goodsId_.AddEntriesFrom(input, _repeated_goodsId_codec);
            break;
          }
          case 18: {
            Account = input.ReadString();
            break;
          }
          case 26: {
            VoiceMess = input.ReadString();
            break;
          }
          case 32: {
            GoodsSource = (global::Game.Protocal.PushNoticeGoodsSource) input.ReadEnum();
            break;
          }
          case 40: {
            NoticeSource = (global::Game.Protocal.PushNoticeSource) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 聊天返回信息
  /// </summary>
  public sealed partial class SCChat : pb::IMessage<SCChat> {
    private static readonly pb::MessageParser<SCChat> _parser = new pb::MessageParser<SCChat>(() => new SCChat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCChat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChat(SCChat other) : this() {
      uid_ = other.uid_;
      name_ = other.name_;
      image_ = other.image_;
      message_ = other.message_;
      experience_ = other.experience_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChat Clone() {
      return new SCChat(this);
    }

    /// <summary>Field number for the "Uid" field.</summary>
    public const int UidFieldNumber = 1;
    private long uid_;
    /// <summary>
    /// 玩家uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 玩家昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Image" field.</summary>
    public const int ImageFieldNumber = 3;
    private int image_;
    /// <summary>
    /// 玩家头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 4;
    private string message_ = "";
    /// <summary>
    /// 发送消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Experience" field.</summary>
    public const int ExperienceFieldNumber = 5;
    private long experience_;
    /// <summary>
    /// 玩家经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Experience {
      get { return experience_; }
      set {
        experience_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCChat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCChat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Name != other.Name) return false;
      if (Image != other.Image) return false;
      if (Message != other.Message) return false;
      if (Experience != other.Experience) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0L) hash ^= Uid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Image != 0) hash ^= Image.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Experience != 0L) hash ^= Experience.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Image != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Image);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (Experience != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Experience);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Image != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Image);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Experience != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Experience);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCChat other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0L) {
        Uid = other.Uid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Image != 0) {
        Image = other.Image;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Experience != 0L) {
        Experience = other.Experience;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Image = input.ReadInt32();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
          case 40: {
            Experience = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 推送进入房间玩家信息
  /// </summary>
  public sealed partial class SCEntranceRoomInfo : pb::IMessage<SCEntranceRoomInfo> {
    private static readonly pb::MessageParser<SCEntranceRoomInfo> _parser = new pb::MessageParser<SCEntranceRoomInfo>(() => new SCEntranceRoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCEntranceRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEntranceRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEntranceRoomInfo(SCEntranceRoomInfo other) : this() {
      uid_ = other.uid_;
      name_ = other.name_;
      roomId_ = other.roomId_;
      costumeId_ = other.costumeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEntranceRoomInfo Clone() {
      return new SCEntranceRoomInfo(this);
    }

    /// <summary>Field number for the "Uid" field.</summary>
    public const int UidFieldNumber = 1;
    private long uid_;
    /// <summary>
    /// 玩家uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 玩家昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 3;
    private int roomId_;
    /// <summary>
    /// 角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "CostumeId" field.</summary>
    public const int CostumeIdFieldNumber = 4;
    private int costumeId_;
    /// <summary>
    /// 服饰id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CostumeId {
      get { return costumeId_; }
      set {
        costumeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCEntranceRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCEntranceRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Name != other.Name) return false;
      if (RoomId != other.RoomId) return false;
      if (CostumeId != other.CostumeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0L) hash ^= Uid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (CostumeId != 0) hash ^= CostumeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (RoomId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomId);
      }
      if (CostumeId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CostumeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (CostumeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostumeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCEntranceRoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0L) {
        Uid = other.Uid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.CostumeId != 0) {
        CostumeId = other.CostumeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            RoomId = input.ReadInt32();
            break;
          }
          case 32: {
            CostumeId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 推送有位置移动玩家信息
  /// </summary>
  public sealed partial class SCMoveLocation : pb::IMessage<SCMoveLocation> {
    private static readonly pb::MessageParser<SCMoveLocation> _parser = new pb::MessageParser<SCMoveLocation>(() => new SCMoveLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCMoveLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMoveLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMoveLocation(SCMoveLocation other) : this() {
      uid_ = other.uid_;
      xaxle_ = other.xaxle_;
      yaxle_ = other.yaxle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMoveLocation Clone() {
      return new SCMoveLocation(this);
    }

    /// <summary>Field number for the "Uid" field.</summary>
    public const int UidFieldNumber = 1;
    private long uid_;
    /// <summary>
    /// 玩家uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "Xaxle" field.</summary>
    public const int XaxleFieldNumber = 2;
    private float xaxle_;
    /// <summary>
    /// x轴
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Xaxle {
      get { return xaxle_; }
      set {
        xaxle_ = value;
      }
    }

    /// <summary>Field number for the "Yaxle" field.</summary>
    public const int YaxleFieldNumber = 3;
    private float yaxle_;
    /// <summary>
    /// y轴
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Yaxle {
      get { return yaxle_; }
      set {
        yaxle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCMoveLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCMoveLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Xaxle, other.Xaxle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Yaxle, other.Yaxle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0L) hash ^= Uid.GetHashCode();
      if (Xaxle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Xaxle);
      if (Yaxle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Yaxle);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (Xaxle != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Xaxle);
      }
      if (Yaxle != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Yaxle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (Xaxle != 0F) {
        size += 1 + 4;
      }
      if (Yaxle != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCMoveLocation other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0L) {
        Uid = other.Uid;
      }
      if (other.Xaxle != 0F) {
        Xaxle = other.Xaxle;
      }
      if (other.Yaxle != 0F) {
        Yaxle = other.Yaxle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 21: {
            Xaxle = input.ReadFloat();
            break;
          }
          case 29: {
            Yaxle = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 乌龟赛跑状态结构
  /// </summary>
  public sealed partial class SCpushGuessingStatusStruct : pb::IMessage<SCpushGuessingStatusStruct> {
    private static readonly pb::MessageParser<SCpushGuessingStatusStruct> _parser = new pb::MessageParser<SCpushGuessingStatusStruct>(() => new SCpushGuessingStatusStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCpushGuessingStatusStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCpushGuessingStatusStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCpushGuessingStatusStruct(SCpushGuessingStatusStruct other) : this() {
      status_ = other.status_;
      statusTime_ = other.statusTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCpushGuessingStatusStruct Clone() {
      return new SCpushGuessingStatusStruct(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Game.Protocal.GuessingStatus status_ = 0;
    /// <summary>
    /// 状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.GuessingStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "StatusTime" field.</summary>
    public const int StatusTimeFieldNumber = 2;
    private int statusTime_;
    /// <summary>
    /// 状态持续时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StatusTime {
      get { return statusTime_; }
      set {
        statusTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCpushGuessingStatusStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCpushGuessingStatusStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (StatusTime != other.StatusTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (StatusTime != 0) hash ^= StatusTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (StatusTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StatusTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (StatusTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCpushGuessingStatusStruct other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.StatusTime != 0) {
        StatusTime = other.StatusTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Game.Protocal.GuessingStatus) input.ReadEnum();
            break;
          }
          case 16: {
            StatusTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 乌龟赛跑
  /// </summary>
  public sealed partial class SCpushGuessingStruct : pb::IMessage<SCpushGuessingStruct> {
    private static readonly pb::MessageParser<SCpushGuessingStruct> _parser = new pb::MessageParser<SCpushGuessingStruct>(() => new SCpushGuessingStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCpushGuessingStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCpushGuessingStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCpushGuessingStruct(SCpushGuessingStruct other) : this() {
      id_ = other.id_;
      status_ = other.status_.Clone();
      meter_ = other.meter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCpushGuessingStruct Clone() {
      return new SCpushGuessingStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Game.Protocal.GuessingNumber id_ = 0;
    /// <summary>
    /// 乌龟编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.GuessingNumber Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Game.Protocal.SCpushGuessingStatusStruct> _repeated_status_codec
        = pb::FieldCodec.ForMessage(18, global::Game.Protocal.SCpushGuessingStatusStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.SCpushGuessingStatusStruct> status_ = new pbc::RepeatedField<global::Game.Protocal.SCpushGuessingStatusStruct>();
    /// <summary>
    /// 状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.SCpushGuessingStatusStruct> Status {
      get { return status_; }
    }

    /// <summary>Field number for the "Meter" field.</summary>
    public const int MeterFieldNumber = 3;
    private int meter_;
    /// <summary>
    /// 位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Meter {
      get { return meter_; }
      set {
        meter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCpushGuessingStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCpushGuessingStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!status_.Equals(other.status_)) return false;
      if (Meter != other.Meter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= status_.GetHashCode();
      if (Meter != 0) hash ^= Meter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Id);
      }
      status_.WriteTo(output, _repeated_status_codec);
      if (Meter != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Meter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Id);
      }
      size += status_.CalculateSize(_repeated_status_codec);
      if (Meter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Meter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCpushGuessingStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      status_.Add(other.status_);
      if (other.Meter != 0) {
        Meter = other.Meter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = (global::Game.Protocal.GuessingNumber) input.ReadEnum();
            break;
          }
          case 18: {
            status_.AddEntriesFrom(input, _repeated_status_codec);
            break;
          }
          case 24: {
            Meter = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCpushGuessingInfo : pb::IMessage<SCpushGuessingInfo> {
    private static readonly pb::MessageParser<SCpushGuessingInfo> _parser = new pb::MessageParser<SCpushGuessingInfo>(() => new SCpushGuessingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCpushGuessingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCpushGuessingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCpushGuessingInfo(SCpushGuessingInfo other) : this() {
      guessingInfoOne_ = other.guessingInfoOne_.Clone();
      guessingInfoTwo_ = other.guessingInfoTwo_.Clone();
      guessingInfoThree_ = other.guessingInfoThree_.Clone();
      gameEndTime_ = other.gameEndTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCpushGuessingInfo Clone() {
      return new SCpushGuessingInfo(this);
    }

    /// <summary>Field number for the "guessingInfoOne" field.</summary>
    public const int GuessingInfoOneFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.SCpushGuessingStruct> _repeated_guessingInfoOne_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.SCpushGuessingStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.SCpushGuessingStruct> guessingInfoOne_ = new pbc::RepeatedField<global::Game.Protocal.SCpushGuessingStruct>();
    /// <summary>
    /// 乌龟比赛信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.SCpushGuessingStruct> GuessingInfoOne {
      get { return guessingInfoOne_; }
    }

    /// <summary>Field number for the "guessingInfoTwo" field.</summary>
    public const int GuessingInfoTwoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Game.Protocal.SCpushGuessingStruct> _repeated_guessingInfoTwo_codec
        = pb::FieldCodec.ForMessage(18, global::Game.Protocal.SCpushGuessingStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.SCpushGuessingStruct> guessingInfoTwo_ = new pbc::RepeatedField<global::Game.Protocal.SCpushGuessingStruct>();
    /// <summary>
    /// 乌龟比赛信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.SCpushGuessingStruct> GuessingInfoTwo {
      get { return guessingInfoTwo_; }
    }

    /// <summary>Field number for the "guessingInfoThree" field.</summary>
    public const int GuessingInfoThreeFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Game.Protocal.SCpushGuessingStruct> _repeated_guessingInfoThree_codec
        = pb::FieldCodec.ForMessage(26, global::Game.Protocal.SCpushGuessingStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.SCpushGuessingStruct> guessingInfoThree_ = new pbc::RepeatedField<global::Game.Protocal.SCpushGuessingStruct>();
    /// <summary>
    /// 乌龟比赛信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.SCpushGuessingStruct> GuessingInfoThree {
      get { return guessingInfoThree_; }
    }

    /// <summary>Field number for the "GameEndTime" field.</summary>
    public const int GameEndTimeFieldNumber = 4;
    private long gameEndTime_;
    /// <summary>
    /// 结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GameEndTime {
      get { return gameEndTime_; }
      set {
        gameEndTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCpushGuessingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCpushGuessingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!guessingInfoOne_.Equals(other.guessingInfoOne_)) return false;
      if(!guessingInfoTwo_.Equals(other.guessingInfoTwo_)) return false;
      if(!guessingInfoThree_.Equals(other.guessingInfoThree_)) return false;
      if (GameEndTime != other.GameEndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= guessingInfoOne_.GetHashCode();
      hash ^= guessingInfoTwo_.GetHashCode();
      hash ^= guessingInfoThree_.GetHashCode();
      if (GameEndTime != 0L) hash ^= GameEndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      guessingInfoOne_.WriteTo(output, _repeated_guessingInfoOne_codec);
      guessingInfoTwo_.WriteTo(output, _repeated_guessingInfoTwo_codec);
      guessingInfoThree_.WriteTo(output, _repeated_guessingInfoThree_codec);
      if (GameEndTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(GameEndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += guessingInfoOne_.CalculateSize(_repeated_guessingInfoOne_codec);
      size += guessingInfoTwo_.CalculateSize(_repeated_guessingInfoTwo_codec);
      size += guessingInfoThree_.CalculateSize(_repeated_guessingInfoThree_codec);
      if (GameEndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GameEndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCpushGuessingInfo other) {
      if (other == null) {
        return;
      }
      guessingInfoOne_.Add(other.guessingInfoOne_);
      guessingInfoTwo_.Add(other.guessingInfoTwo_);
      guessingInfoThree_.Add(other.guessingInfoThree_);
      if (other.GameEndTime != 0L) {
        GameEndTime = other.GameEndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            guessingInfoOne_.AddEntriesFrom(input, _repeated_guessingInfoOne_codec);
            break;
          }
          case 18: {
            guessingInfoTwo_.AddEntriesFrom(input, _repeated_guessingInfoTwo_codec);
            break;
          }
          case 26: {
            guessingInfoThree_.AddEntriesFrom(input, _repeated_guessingInfoThree_codec);
            break;
          }
          case 32: {
            GameEndTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 推送玩家发送动作
  /// </summary>
  public sealed partial class SCpushMotion : pb::IMessage<SCpushMotion> {
    private static readonly pb::MessageParser<SCpushMotion> _parser = new pb::MessageParser<SCpushMotion>(() => new SCpushMotion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCpushMotion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCpushMotion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCpushMotion(SCpushMotion other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCpushMotion Clone() {
      return new SCpushMotion(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCpushMotion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCpushMotion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCpushMotion other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 退出房间
  /// </summary>
  public sealed partial class SCDepartureRoom : pb::IMessage<SCDepartureRoom> {
    private static readonly pb::MessageParser<SCDepartureRoom> _parser = new pb::MessageParser<SCDepartureRoom>(() => new SCDepartureRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCDepartureRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDepartureRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDepartureRoom(SCDepartureRoom other) : this() {
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDepartureRoom Clone() {
      return new SCDepartureRoom(this);
    }

    /// <summary>Field number for the "Uid" field.</summary>
    public const int UidFieldNumber = 1;
    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCDepartureRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCDepartureRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0L) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCDepartureRoom other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0L) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 活动结束
  /// </summary>
  public sealed partial class SCActivityFinish : pb::IMessage<SCActivityFinish> {
    private static readonly pb::MessageParser<SCActivityFinish> _parser = new pb::MessageParser<SCActivityFinish>(() => new SCActivityFinish());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCActivityFinish> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCActivityFinish() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCActivityFinish(SCActivityFinish other) : this() {
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCActivityFinish Clone() {
      return new SCActivityFinish(this);
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 1;
    private long endTime_;
    /// <summary>
    /// 活动结束时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCActivityFinish);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCActivityFinish other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EndTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCActivityFinish other) {
      if (other == null) {
        return;
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 账号重复登录
  /// </summary>
  public sealed partial class SCRepetitionRegister : pb::IMessage<SCRepetitionRegister> {
    private static readonly pb::MessageParser<SCRepetitionRegister> _parser = new pb::MessageParser<SCRepetitionRegister>(() => new SCRepetitionRegister());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCRepetitionRegister> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.PushDataReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRepetitionRegister() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRepetitionRegister(SCRepetitionRegister other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRepetitionRegister Clone() {
      return new SCRepetitionRegister(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCRepetitionRegister);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCRepetitionRegister other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCRepetitionRegister other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
