// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Cdk.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Game.Protocal {

  /// <summary>Holder for reflection information generated from Cdk.proto</summary>
  public static partial class CdkReflection {

    #region Descriptor
    /// <summary>File descriptor for Cdk.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CdkReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglDZGsucHJvdG8SDUdhbWUuUHJvdG9jYWwaD1dhcmVob3VzZS5wcm90byId",
            "CgpDU0Nka0F3YXJkEg8KB0Nka0NvZGUYASABKAkiQQoKU0NDZGtBd2FyZBIz",
            "CglBd2FyZEluZm8YASADKAsyIC5HYW1lLlByb3RvY2FsLkNTV2FyZUhvdXNl",
            "U3RydWN0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Game.Protocal.WarehouseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSCdkAward), global::Game.Protocal.CSCdkAward.Parser, new[]{ "CdkCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCCdkAward), global::Game.Protocal.SCCdkAward.Parser, new[]{ "AwardInfo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 请求cdk兑换
  /// </summary>
  public sealed partial class CSCdkAward : pb::IMessage<CSCdkAward> {
    private static readonly pb::MessageParser<CSCdkAward> _parser = new pb::MessageParser<CSCdkAward>(() => new CSCdkAward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSCdkAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.CdkReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSCdkAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSCdkAward(CSCdkAward other) : this() {
      cdkCode_ = other.cdkCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSCdkAward Clone() {
      return new CSCdkAward(this);
    }

    /// <summary>Field number for the "CdkCode" field.</summary>
    public const int CdkCodeFieldNumber = 1;
    private string cdkCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CdkCode {
      get { return cdkCode_; }
      set {
        cdkCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSCdkAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSCdkAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CdkCode != other.CdkCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CdkCode.Length != 0) hash ^= CdkCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CdkCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CdkCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CdkCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CdkCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSCdkAward other) {
      if (other == null) {
        return;
      }
      if (other.CdkCode.Length != 0) {
        CdkCode = other.CdkCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CdkCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回cdk奖励
  /// </summary>
  public sealed partial class SCCdkAward : pb::IMessage<SCCdkAward> {
    private static readonly pb::MessageParser<SCCdkAward> _parser = new pb::MessageParser<SCCdkAward>(() => new SCCdkAward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCCdkAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.CdkReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCCdkAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCCdkAward(SCCdkAward other) : this() {
      awardInfo_ = other.awardInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCCdkAward Clone() {
      return new SCCdkAward(this);
    }

    /// <summary>Field number for the "AwardInfo" field.</summary>
    public const int AwardInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.CSWareHouseStruct> _repeated_awardInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.CSWareHouseStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.CSWareHouseStruct> awardInfo_ = new pbc::RepeatedField<global::Game.Protocal.CSWareHouseStruct>();
    /// <summary>
    /// 奖励信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.CSWareHouseStruct> AwardInfo {
      get { return awardInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCCdkAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCCdkAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!awardInfo_.Equals(other.awardInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= awardInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      awardInfo_.WriteTo(output, _repeated_awardInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += awardInfo_.CalculateSize(_repeated_awardInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCCdkAward other) {
      if (other == null) {
        return;
      }
      awardInfo_.Add(other.awardInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            awardInfo_.AddEntriesFrom(input, _repeated_awardInfo_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
