// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Soiree.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Game.Protocal {

  /// <summary>Holder for reflection information generated from Soiree.proto</summary>
  public static partial class SoireeReflection {

    #region Descriptor
    /// <summary>File descriptor for Soiree.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SoireeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxTb2lyZWUucHJvdG8SDUdhbWUuUHJvdG9jYWwaDkVudW1UeXBlLnByb3Rv",
            "Gg5QdXNoRGF0YS5wcm90byIzChBTQ1Jvb21MaXN0U3RydWN0Eg4KBlJvb21J",
            "ZBgBIAEoBRIPCgdSb29tTnVtGAIgASgFIkMKDlNDUm9vbUxpc3RJbmZvEjEK",
            "CFJvb21JbmZvGAEgAygLMh8uR2FtZS5Qcm90b2NhbC5TQ1Jvb21MaXN0U3Ry",
            "dWN0IiAKDkNTRW50cmFuY2VSb29tEg4KBlJvb21JZBgBIAEoBSJuChBTQ1Jv",
            "b21Vc2VyU3RydWN0EgsKA1VpZBgBIAEoAxIMCgROYW1lGAIgASgJEg0KBVhh",
            "eGxlGAMgASgCEg0KBVlheGxlGAQgASgCEg4KBlJvb21JZBgFIAEoBRIRCglD",
            "b3N0dW1lSWQYBiABKAUivQEKFFNDUm9vbUFjdGl2aXR5U3RydWN0EjMKCkdh",
            "bWVTdGF0ZXMYASABKA4yHy5HYW1lLlByb3RvY2FsLlNvaXJlZUdhbWVTdGF0",
            "ZXMSKgoHQmV0SW5mbxgCIAMoCzIZLkdhbWUuUHJvdG9jYWwuQ1NHdWVzc2lu",
            "ZxIzCghHYW1lSW5mbxgDIAEoCzIhLkdhbWUuUHJvdG9jYWwuU0NwdXNoR3Vl",
            "c3NpbmdJbmZvEg8KB0VuZFRpbWUYBCABKAMihAEKDlNDRW50cmFuY2VSb29t",
            "EjcKDlNDUm9vbVVzZXJJbmZvGAEgAygLMh8uR2FtZS5Qcm90b2NhbC5TQ1Jv",
            "b21Vc2VyU3RydWN0EjkKDEFjdGl2aXR5SW5mbxgCIAEoCzIjLkdhbWUuUHJv",
            "dG9jYWwuU0NSb29tQWN0aXZpdHlTdHJ1Y3QiUwoKQ1NHdWVzc2luZxIxCgpU",
            "b3J0b2lzZUlkGAEgASgOMh0uR2FtZS5Qcm90b2NhbC5HdWVzc2luZ051bWJl",
            "chISCgpTdXBwb3J0TnVtGAIgASgFIiAKDUNTQ2hhbm5lbENoYXQSDwoHbWVz",
            "c2FnZRgBIAEoCSIuCg5DU01vdmVMb2NhdGlvbhINCgVYYXhsZRgBIAEoAhIN",
            "CgVZYXhsZRgCIAEoAiIWCghDU01vdGlvbhIKCgJJZBgBIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Game.Protocal.EnumTypeReflection.Descriptor, global::Game.Protocal.PushDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCRoomListStruct), global::Game.Protocal.SCRoomListStruct.Parser, new[]{ "RoomId", "RoomNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCRoomListInfo), global::Game.Protocal.SCRoomListInfo.Parser, new[]{ "RoomInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSEntranceRoom), global::Game.Protocal.CSEntranceRoom.Parser, new[]{ "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCRoomUserStruct), global::Game.Protocal.SCRoomUserStruct.Parser, new[]{ "Uid", "Name", "Xaxle", "Yaxle", "RoomId", "CostumeId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCRoomActivityStruct), global::Game.Protocal.SCRoomActivityStruct.Parser, new[]{ "GameStates", "BetInfo", "GameInfo", "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCEntranceRoom), global::Game.Protocal.SCEntranceRoom.Parser, new[]{ "SCRoomUserInfo", "ActivityInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSGuessing), global::Game.Protocal.CSGuessing.Parser, new[]{ "TortoiseId", "SupportNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSChannelChat), global::Game.Protocal.CSChannelChat.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSMoveLocation), global::Game.Protocal.CSMoveLocation.Parser, new[]{ "Xaxle", "Yaxle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSMotion), global::Game.Protocal.CSMotion.Parser, new[]{ "Id" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 获取房间列表
  /// </summary>
  public sealed partial class SCRoomListStruct : pb::IMessage<SCRoomListStruct> {
    private static readonly pb::MessageParser<SCRoomListStruct> _parser = new pb::MessageParser<SCRoomListStruct>(() => new SCRoomListStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCRoomListStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.SoireeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRoomListStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRoomListStruct(SCRoomListStruct other) : this() {
      roomId_ = other.roomId_;
      roomNum_ = other.roomNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRoomListStruct Clone() {
      return new SCRoomListStruct(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "RoomNum" field.</summary>
    public const int RoomNumFieldNumber = 2;
    private int roomNum_;
    /// <summary>
    /// 当前房间人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomNum {
      get { return roomNum_; }
      set {
        roomNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCRoomListStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCRoomListStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (RoomNum != other.RoomNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (RoomNum != 0) hash ^= RoomNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (RoomNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (RoomNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCRoomListStruct other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.RoomNum != 0) {
        RoomNum = other.RoomNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 16: {
            RoomNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCRoomListInfo : pb::IMessage<SCRoomListInfo> {
    private static readonly pb::MessageParser<SCRoomListInfo> _parser = new pb::MessageParser<SCRoomListInfo>(() => new SCRoomListInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCRoomListInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.SoireeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRoomListInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRoomListInfo(SCRoomListInfo other) : this() {
      roomInfo_ = other.roomInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRoomListInfo Clone() {
      return new SCRoomListInfo(this);
    }

    /// <summary>Field number for the "RoomInfo" field.</summary>
    public const int RoomInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.SCRoomListStruct> _repeated_roomInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.SCRoomListStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.SCRoomListStruct> roomInfo_ = new pbc::RepeatedField<global::Game.Protocal.SCRoomListStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.SCRoomListStruct> RoomInfo {
      get { return roomInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCRoomListInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCRoomListInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roomInfo_.Equals(other.roomInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roomInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      roomInfo_.WriteTo(output, _repeated_roomInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roomInfo_.CalculateSize(_repeated_roomInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCRoomListInfo other) {
      if (other == null) {
        return;
      }
      roomInfo_.Add(other.roomInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roomInfo_.AddEntriesFrom(input, _repeated_roomInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 进入(切换)晚会房间
  /// </summary>
  public sealed partial class CSEntranceRoom : pb::IMessage<CSEntranceRoom> {
    private static readonly pb::MessageParser<CSEntranceRoom> _parser = new pb::MessageParser<CSEntranceRoom>(() => new CSEntranceRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSEntranceRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.SoireeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSEntranceRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSEntranceRoom(CSEntranceRoom other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSEntranceRoom Clone() {
      return new CSEntranceRoom(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    /// <summary>
    /// 房间id(不填随机分配)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSEntranceRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSEntranceRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSEntranceRoom other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回在房间玩家信息
  /// </summary>
  public sealed partial class SCRoomUserStruct : pb::IMessage<SCRoomUserStruct> {
    private static readonly pb::MessageParser<SCRoomUserStruct> _parser = new pb::MessageParser<SCRoomUserStruct>(() => new SCRoomUserStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCRoomUserStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.SoireeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRoomUserStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRoomUserStruct(SCRoomUserStruct other) : this() {
      uid_ = other.uid_;
      name_ = other.name_;
      xaxle_ = other.xaxle_;
      yaxle_ = other.yaxle_;
      roomId_ = other.roomId_;
      costumeId_ = other.costumeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRoomUserStruct Clone() {
      return new SCRoomUserStruct(this);
    }

    /// <summary>Field number for the "Uid" field.</summary>
    public const int UidFieldNumber = 1;
    private long uid_;
    /// <summary>
    /// uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Xaxle" field.</summary>
    public const int XaxleFieldNumber = 3;
    private float xaxle_;
    /// <summary>
    /// x轴
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Xaxle {
      get { return xaxle_; }
      set {
        xaxle_ = value;
      }
    }

    /// <summary>Field number for the "Yaxle" field.</summary>
    public const int YaxleFieldNumber = 4;
    private float yaxle_;
    /// <summary>
    /// y轴
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Yaxle {
      get { return yaxle_; }
      set {
        yaxle_ = value;
      }
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 5;
    private int roomId_;
    /// <summary>
    /// 角色id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "CostumeId" field.</summary>
    public const int CostumeIdFieldNumber = 6;
    private int costumeId_;
    /// <summary>
    /// 服饰id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CostumeId {
      get { return costumeId_; }
      set {
        costumeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCRoomUserStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCRoomUserStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Xaxle, other.Xaxle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Yaxle, other.Yaxle)) return false;
      if (RoomId != other.RoomId) return false;
      if (CostumeId != other.CostumeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0L) hash ^= Uid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Xaxle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Xaxle);
      if (Yaxle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Yaxle);
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (CostumeId != 0) hash ^= CostumeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Xaxle != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Xaxle);
      }
      if (Yaxle != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Yaxle);
      }
      if (RoomId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RoomId);
      }
      if (CostumeId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CostumeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Xaxle != 0F) {
        size += 1 + 4;
      }
      if (Yaxle != 0F) {
        size += 1 + 4;
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (CostumeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostumeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCRoomUserStruct other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0L) {
        Uid = other.Uid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Xaxle != 0F) {
        Xaxle = other.Xaxle;
      }
      if (other.Yaxle != 0F) {
        Yaxle = other.Yaxle;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.CostumeId != 0) {
        CostumeId = other.CostumeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 29: {
            Xaxle = input.ReadFloat();
            break;
          }
          case 37: {
            Yaxle = input.ReadFloat();
            break;
          }
          case 40: {
            RoomId = input.ReadInt32();
            break;
          }
          case 48: {
            CostumeId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 返回晚会活动状态及信息
  /// </summary>
  public sealed partial class SCRoomActivityStruct : pb::IMessage<SCRoomActivityStruct> {
    private static readonly pb::MessageParser<SCRoomActivityStruct> _parser = new pb::MessageParser<SCRoomActivityStruct>(() => new SCRoomActivityStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCRoomActivityStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.SoireeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRoomActivityStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRoomActivityStruct(SCRoomActivityStruct other) : this() {
      gameStates_ = other.gameStates_;
      betInfo_ = other.betInfo_.Clone();
      gameInfo_ = other.gameInfo_ != null ? other.gameInfo_.Clone() : null;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRoomActivityStruct Clone() {
      return new SCRoomActivityStruct(this);
    }

    /// <summary>Field number for the "GameStates" field.</summary>
    public const int GameStatesFieldNumber = 1;
    private global::Game.Protocal.SoireeGameStates gameStates_ = 0;
    /// <summary>
    /// 比赛状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.SoireeGameStates GameStates {
      get { return gameStates_; }
      set {
        gameStates_ = value;
      }
    }

    /// <summary>Field number for the "BetInfo" field.</summary>
    public const int BetInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Game.Protocal.CSGuessing> _repeated_betInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Game.Protocal.CSGuessing.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.CSGuessing> betInfo_ = new pbc::RepeatedField<global::Game.Protocal.CSGuessing>();
    /// <summary>
    /// 下注情况
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.CSGuessing> BetInfo {
      get { return betInfo_; }
    }

    /// <summary>Field number for the "GameInfo" field.</summary>
    public const int GameInfoFieldNumber = 3;
    private global::Game.Protocal.SCpushGuessingInfo gameInfo_;
    /// <summary>
    /// 比赛情况
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.SCpushGuessingInfo GameInfo {
      get { return gameInfo_; }
      set {
        gameInfo_ = value;
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 4;
    private long endTime_;
    /// <summary>
    /// 结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCRoomActivityStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCRoomActivityStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameStates != other.GameStates) return false;
      if(!betInfo_.Equals(other.betInfo_)) return false;
      if (!object.Equals(GameInfo, other.GameInfo)) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameStates != 0) hash ^= GameStates.GetHashCode();
      hash ^= betInfo_.GetHashCode();
      if (gameInfo_ != null) hash ^= GameInfo.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameStates != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GameStates);
      }
      betInfo_.WriteTo(output, _repeated_betInfo_codec);
      if (gameInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GameInfo);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameStates != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameStates);
      }
      size += betInfo_.CalculateSize(_repeated_betInfo_codec);
      if (gameInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameInfo);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCRoomActivityStruct other) {
      if (other == null) {
        return;
      }
      if (other.GameStates != 0) {
        GameStates = other.GameStates;
      }
      betInfo_.Add(other.betInfo_);
      if (other.gameInfo_ != null) {
        if (gameInfo_ == null) {
          GameInfo = new global::Game.Protocal.SCpushGuessingInfo();
        }
        GameInfo.MergeFrom(other.GameInfo);
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameStates = (global::Game.Protocal.SoireeGameStates) input.ReadEnum();
            break;
          }
          case 18: {
            betInfo_.AddEntriesFrom(input, _repeated_betInfo_codec);
            break;
          }
          case 26: {
            if (gameInfo_ == null) {
              GameInfo = new global::Game.Protocal.SCpushGuessingInfo();
            }
            input.ReadMessage(GameInfo);
            break;
          }
          case 32: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCEntranceRoom : pb::IMessage<SCEntranceRoom> {
    private static readonly pb::MessageParser<SCEntranceRoom> _parser = new pb::MessageParser<SCEntranceRoom>(() => new SCEntranceRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCEntranceRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.SoireeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEntranceRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEntranceRoom(SCEntranceRoom other) : this() {
      sCRoomUserInfo_ = other.sCRoomUserInfo_.Clone();
      activityInfo_ = other.activityInfo_ != null ? other.activityInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEntranceRoom Clone() {
      return new SCEntranceRoom(this);
    }

    /// <summary>Field number for the "SCRoomUserInfo" field.</summary>
    public const int SCRoomUserInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.SCRoomUserStruct> _repeated_sCRoomUserInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.SCRoomUserStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.SCRoomUserStruct> sCRoomUserInfo_ = new pbc::RepeatedField<global::Game.Protocal.SCRoomUserStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.SCRoomUserStruct> SCRoomUserInfo {
      get { return sCRoomUserInfo_; }
    }

    /// <summary>Field number for the "ActivityInfo" field.</summary>
    public const int ActivityInfoFieldNumber = 2;
    private global::Game.Protocal.SCRoomActivityStruct activityInfo_;
    /// <summary>
    /// 活动情况
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.SCRoomActivityStruct ActivityInfo {
      get { return activityInfo_; }
      set {
        activityInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCEntranceRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCEntranceRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sCRoomUserInfo_.Equals(other.sCRoomUserInfo_)) return false;
      if (!object.Equals(ActivityInfo, other.ActivityInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sCRoomUserInfo_.GetHashCode();
      if (activityInfo_ != null) hash ^= ActivityInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sCRoomUserInfo_.WriteTo(output, _repeated_sCRoomUserInfo_codec);
      if (activityInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActivityInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sCRoomUserInfo_.CalculateSize(_repeated_sCRoomUserInfo_codec);
      if (activityInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivityInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCEntranceRoom other) {
      if (other == null) {
        return;
      }
      sCRoomUserInfo_.Add(other.sCRoomUserInfo_);
      if (other.activityInfo_ != null) {
        if (activityInfo_ == null) {
          ActivityInfo = new global::Game.Protocal.SCRoomActivityStruct();
        }
        ActivityInfo.MergeFrom(other.ActivityInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sCRoomUserInfo_.AddEntriesFrom(input, _repeated_sCRoomUserInfo_codec);
            break;
          }
          case 18: {
            if (activityInfo_ == null) {
              ActivityInfo = new global::Game.Protocal.SCRoomActivityStruct();
            }
            input.ReadMessage(ActivityInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 竞猜
  /// </summary>
  public sealed partial class CSGuessing : pb::IMessage<CSGuessing> {
    private static readonly pb::MessageParser<CSGuessing> _parser = new pb::MessageParser<CSGuessing>(() => new CSGuessing());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGuessing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.SoireeReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGuessing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGuessing(CSGuessing other) : this() {
      tortoiseId_ = other.tortoiseId_;
      supportNum_ = other.supportNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGuessing Clone() {
      return new CSGuessing(this);
    }

    /// <summary>Field number for the "TortoiseId" field.</summary>
    public const int TortoiseIdFieldNumber = 1;
    private global::Game.Protocal.GuessingNumber tortoiseId_ = 0;
    /// <summary>
    /// 乌龟编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.GuessingNumber TortoiseId {
      get { return tortoiseId_; }
      set {
        tortoiseId_ = value;
      }
    }

    /// <summary>Field number for the "SupportNum" field.</summary>
    public const int SupportNumFieldNumber = 2;
    private int supportNum_;
    /// <summary>
    /// 应援币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SupportNum {
      get { return supportNum_; }
      set {
        supportNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGuessing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGuessing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TortoiseId != other.TortoiseId) return false;
      if (SupportNum != other.SupportNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TortoiseId != 0) hash ^= TortoiseId.GetHashCode();
      if (SupportNum != 0) hash ^= SupportNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TortoiseId != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TortoiseId);
      }
      if (SupportNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SupportNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TortoiseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TortoiseId);
      }
      if (SupportNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SupportNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGuessing other) {
      if (other == null) {
        return;
      }
      if (other.TortoiseId != 0) {
        TortoiseId = other.TortoiseId;
      }
      if (other.SupportNum != 0) {
        SupportNum = other.SupportNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TortoiseId = (global::Game.Protocal.GuessingNumber) input.ReadEnum();
            break;
          }
          case 16: {
            SupportNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 频道聊天
  /// </summary>
  public sealed partial class CSChannelChat : pb::IMessage<CSChannelChat> {
    private static readonly pb::MessageParser<CSChannelChat> _parser = new pb::MessageParser<CSChannelChat>(() => new CSChannelChat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSChannelChat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.SoireeReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChannelChat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChannelChat(CSChannelChat other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChannelChat Clone() {
      return new CSChannelChat(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSChannelChat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSChannelChat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSChannelChat other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 移动位置
  /// </summary>
  public sealed partial class CSMoveLocation : pb::IMessage<CSMoveLocation> {
    private static readonly pb::MessageParser<CSMoveLocation> _parser = new pb::MessageParser<CSMoveLocation>(() => new CSMoveLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSMoveLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.SoireeReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMoveLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMoveLocation(CSMoveLocation other) : this() {
      xaxle_ = other.xaxle_;
      yaxle_ = other.yaxle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMoveLocation Clone() {
      return new CSMoveLocation(this);
    }

    /// <summary>Field number for the "Xaxle" field.</summary>
    public const int XaxleFieldNumber = 1;
    private float xaxle_;
    /// <summary>
    /// x轴
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Xaxle {
      get { return xaxle_; }
      set {
        xaxle_ = value;
      }
    }

    /// <summary>Field number for the "Yaxle" field.</summary>
    public const int YaxleFieldNumber = 2;
    private float yaxle_;
    /// <summary>
    /// y轴
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Yaxle {
      get { return yaxle_; }
      set {
        yaxle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSMoveLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSMoveLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Xaxle, other.Xaxle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Yaxle, other.Yaxle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Xaxle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Xaxle);
      if (Yaxle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Yaxle);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Xaxle != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Xaxle);
      }
      if (Yaxle != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Yaxle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Xaxle != 0F) {
        size += 1 + 4;
      }
      if (Yaxle != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSMoveLocation other) {
      if (other == null) {
        return;
      }
      if (other.Xaxle != 0F) {
        Xaxle = other.Xaxle;
      }
      if (other.Yaxle != 0F) {
        Yaxle = other.Yaxle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Xaxle = input.ReadFloat();
            break;
          }
          case 21: {
            Yaxle = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 动作请求
  /// </summary>
  public sealed partial class CSMotion : pb::IMessage<CSMotion> {
    private static readonly pb::MessageParser<CSMotion> _parser = new pb::MessageParser<CSMotion>(() => new CSMotion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSMotion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.SoireeReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMotion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMotion(CSMotion other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMotion Clone() {
      return new CSMotion(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSMotion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSMotion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSMotion other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
