// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: StageProperty.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Game.Protocal {

  /// <summary>Holder for reflection information generated from StageProperty.proto</summary>
  public static partial class StagePropertyReflection {

    #region Descriptor
    /// <summary>File descriptor for StageProperty.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StagePropertyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNTdGFnZVByb3BlcnR5LnByb3RvEg1HYW1lLlByb3RvY2FsGg5FbnVtVHlw",
            "ZS5wcm90bxoPV2FyZWhvdXNlLnByb3RvIlgKCUNTQnV5UHJvcBIOCgZHb29k",
            "SWQYASABKAUSDwoHR29vZE51bRgCIAEoBRIqCgZCdXlXYXkYAyABKA4yGi5H",
            "YW1lLlByb3RvY2FsLkdvb2RzQnV5V2F5IjIKEFNDQnV5R29vZHNTdHJ1Y3QS",
            "DwoHR29vZHNJZBgBIAEoBRINCgVDb3VudBgCIAEoBSJCCglTQ0J1eVByb3AS",
            "NQoMQ3VycmVuY3lJbmZvGAEgAygLMh8uR2FtZS5Qcm90b2NhbC5TQ0J1eUdv",
            "b2RzU3RydWN0Ik8KD0dvb2RzSW5mb1N0cnVjdBIOCgZTaG9wSWQYASABKAUS",
            "EwoLVG9kYXlCdXlOdW0YAiABKAUSFwoPUGVybWFuZW50QnV5TnVtGAMgASgF",
            "IlAKFVNDUHJvbW90aW9uc0dvb2RzSW5mbxI3Cg9Qcm9tb3Rpb25zR29vZHMY",
            "ASADKAsyHi5HYW1lLlByb3RvY2FsLkdvb2RzSW5mb1N0cnVjdCJIChNDU1Vz",
            "ZVdhcmVob3VzZUdvb2RzEg8KB0dvb2RzSWQYASABKAUSDwoHR29vZE51bRgC",
            "IAEoBRIPCgdNZXNzYWdlGAMgASgJIkwKE1NDVXNlV2FyZWhvdXNlR29vZHMS",
            "NQoMR2V0R29vZHNJbmZvGAEgAygLMh8uR2FtZS5Qcm90b2NhbC5TQ0J1eUdv",
            "b2RzU3RydWN0Il4KD0NTVHJlYXN1cmVDaGVzdBI7Cg9Db25zdW1wdGlvblR5",
            "cGUYASABKA4yIi5HYW1lLlByb3RvY2FsLlVubG9ja1RyZWFzdXJlQ2hlc3QS",
            "DgoGR29vZElkGAIgASgFIlgKGVNDVHJlYXN1cmVDaGVzdFVubG9ja0luZm8S",
            "OwoKVW5sb2NrSW5mbxgBIAMoCzInLkdhbWUuUHJvdG9jYWwuV2FyZWhvdXNl",
            "Qm94VW5sb2NrU3RydWN0Ij0KGFdhcmVob3VzZUJveFVubG9ja1N0cnVjdBIN",
            "CgVCb3hJZBgBIAEoBRISCgpVbmxvY2tUaW1lGAIgASgDIisKFVNDVHJlYXN1",
            "cmVDaGVzdFJlc3VsdBISCgpVbmxvY2tUaW1lGAEgASgDIikKF0NTR2V0VHJl",
            "YXN1cmVDaGVzdEF3YXJkEg4KBkdvb2RJZBgBIAEoBSJWCh1TQ0dldFRyZWFz",
            "dXJlQ2hlc3RBd2FyZFJlc3VsdBI1CgtVc2VQcm9wSW5mbxgBIAMoCzIgLkdh",
            "bWUuUHJvdG9jYWwuQ1NXYXJlSG91c2VTdHJ1Y3QiJgoUQ1NUcmVhc3VyZUNo",
            "ZXN0U3BlZWQSDgoGR29vZElkGAEgASgFIiQKFFNDVHJlYXN1cmVDaGVzdFNw",
            "ZWVkEgwKBFRpbWUYASABKAMiNwoNQ1NCdXlQcm9wSW5mbxImCgRJbmZvGAEg",
            "AygLMhguR2FtZS5Qcm90b2NhbC5DU0J1eVByb3BiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Game.Protocal.EnumTypeReflection.Descriptor, global::Game.Protocal.WarehouseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSBuyProp), global::Game.Protocal.CSBuyProp.Parser, new[]{ "GoodId", "GoodNum", "BuyWay" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCBuyGoodsStruct), global::Game.Protocal.SCBuyGoodsStruct.Parser, new[]{ "GoodsId", "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCBuyProp), global::Game.Protocal.SCBuyProp.Parser, new[]{ "CurrencyInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.GoodsInfoStruct), global::Game.Protocal.GoodsInfoStruct.Parser, new[]{ "ShopId", "TodayBuyNum", "PermanentBuyNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCPromotionsGoodsInfo), global::Game.Protocal.SCPromotionsGoodsInfo.Parser, new[]{ "PromotionsGoods" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSUseWarehouseGoods), global::Game.Protocal.CSUseWarehouseGoods.Parser, new[]{ "GoodsId", "GoodNum", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCUseWarehouseGoods), global::Game.Protocal.SCUseWarehouseGoods.Parser, new[]{ "GetGoodsInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSTreasureChest), global::Game.Protocal.CSTreasureChest.Parser, new[]{ "ConsumptionType", "GoodId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCTreasureChestUnlockInfo), global::Game.Protocal.SCTreasureChestUnlockInfo.Parser, new[]{ "UnlockInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.WarehouseBoxUnlockStruct), global::Game.Protocal.WarehouseBoxUnlockStruct.Parser, new[]{ "BoxId", "UnlockTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCTreasureChestResult), global::Game.Protocal.SCTreasureChestResult.Parser, new[]{ "UnlockTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSGetTreasureChestAward), global::Game.Protocal.CSGetTreasureChestAward.Parser, new[]{ "GoodId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCGetTreasureChestAwardResult), global::Game.Protocal.SCGetTreasureChestAwardResult.Parser, new[]{ "UsePropInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSTreasureChestSpeed), global::Game.Protocal.CSTreasureChestSpeed.Parser, new[]{ "GoodId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCTreasureChestSpeed), global::Game.Protocal.SCTreasureChestSpeed.Parser, new[]{ "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSBuyPropInfo), global::Game.Protocal.CSBuyPropInfo.Parser, new[]{ "Info" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 购买道具
  /// </summary>
  public sealed partial class CSBuyProp : pb::IMessage<CSBuyProp> {
    private static readonly pb::MessageParser<CSBuyProp> _parser = new pb::MessageParser<CSBuyProp>(() => new CSBuyProp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSBuyProp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyProp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyProp(CSBuyProp other) : this() {
      goodId_ = other.goodId_;
      goodNum_ = other.goodNum_;
      buyWay_ = other.buyWay_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyProp Clone() {
      return new CSBuyProp(this);
    }

    /// <summary>Field number for the "GoodId" field.</summary>
    public const int GoodIdFieldNumber = 1;
    private int goodId_;
    /// <summary>
    /// 商品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodId {
      get { return goodId_; }
      set {
        goodId_ = value;
      }
    }

    /// <summary>Field number for the "GoodNum" field.</summary>
    public const int GoodNumFieldNumber = 2;
    private int goodNum_;
    /// <summary>
    /// 商品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodNum {
      get { return goodNum_; }
      set {
        goodNum_ = value;
      }
    }

    /// <summary>Field number for the "BuyWay" field.</summary>
    public const int BuyWayFieldNumber = 3;
    private global::Game.Protocal.GoodsBuyWay buyWay_ = 0;
    /// <summary>
    /// 购买方式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.GoodsBuyWay BuyWay {
      get { return buyWay_; }
      set {
        buyWay_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSBuyProp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSBuyProp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GoodId != other.GoodId) return false;
      if (GoodNum != other.GoodNum) return false;
      if (BuyWay != other.BuyWay) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GoodId != 0) hash ^= GoodId.GetHashCode();
      if (GoodNum != 0) hash ^= GoodNum.GetHashCode();
      if (BuyWay != 0) hash ^= BuyWay.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GoodId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GoodId);
      }
      if (GoodNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GoodNum);
      }
      if (BuyWay != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BuyWay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GoodId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodId);
      }
      if (GoodNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodNum);
      }
      if (BuyWay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BuyWay);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSBuyProp other) {
      if (other == null) {
        return;
      }
      if (other.GoodId != 0) {
        GoodId = other.GoodId;
      }
      if (other.GoodNum != 0) {
        GoodNum = other.GoodNum;
      }
      if (other.BuyWay != 0) {
        BuyWay = other.BuyWay;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GoodId = input.ReadInt32();
            break;
          }
          case 16: {
            GoodNum = input.ReadInt32();
            break;
          }
          case 24: {
            BuyWay = (global::Game.Protocal.GoodsBuyWay) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 道具返回结构
  /// </summary>
  public sealed partial class SCBuyGoodsStruct : pb::IMessage<SCBuyGoodsStruct> {
    private static readonly pb::MessageParser<SCBuyGoodsStruct> _parser = new pb::MessageParser<SCBuyGoodsStruct>(() => new SCBuyGoodsStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCBuyGoodsStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBuyGoodsStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBuyGoodsStruct(SCBuyGoodsStruct other) : this() {
      goodsId_ = other.goodsId_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBuyGoodsStruct Clone() {
      return new SCBuyGoodsStruct(this);
    }

    /// <summary>Field number for the "GoodsId" field.</summary>
    public const int GoodsIdFieldNumber = 1;
    private int goodsId_;
    /// <summary>
    /// 商品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodsId {
      get { return goodsId_; }
      set {
        goodsId_ = value;
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    /// <summary>
    /// 数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCBuyGoodsStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCBuyGoodsStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GoodsId != other.GoodsId) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GoodsId != 0) hash ^= GoodsId.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GoodsId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GoodsId);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GoodsId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodsId);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCBuyGoodsStruct other) {
      if (other == null) {
        return;
      }
      if (other.GoodsId != 0) {
        GoodsId = other.GoodsId;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GoodsId = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 购买道具返回
  /// </summary>
  public sealed partial class SCBuyProp : pb::IMessage<SCBuyProp> {
    private static readonly pb::MessageParser<SCBuyProp> _parser = new pb::MessageParser<SCBuyProp>(() => new SCBuyProp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCBuyProp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBuyProp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBuyProp(SCBuyProp other) : this() {
      currencyInfo_ = other.currencyInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBuyProp Clone() {
      return new SCBuyProp(this);
    }

    /// <summary>Field number for the "CurrencyInfo" field.</summary>
    public const int CurrencyInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.SCBuyGoodsStruct> _repeated_currencyInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.SCBuyGoodsStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.SCBuyGoodsStruct> currencyInfo_ = new pbc::RepeatedField<global::Game.Protocal.SCBuyGoodsStruct>();
    /// <summary>
    /// 货币信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.SCBuyGoodsStruct> CurrencyInfo {
      get { return currencyInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCBuyProp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCBuyProp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!currencyInfo_.Equals(other.currencyInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= currencyInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      currencyInfo_.WriteTo(output, _repeated_currencyInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += currencyInfo_.CalculateSize(_repeated_currencyInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCBuyProp other) {
      if (other == null) {
        return;
      }
      currencyInfo_.Add(other.currencyInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            currencyInfo_.AddEntriesFrom(input, _repeated_currencyInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 限购道具结构
  /// </summary>
  public sealed partial class GoodsInfoStruct : pb::IMessage<GoodsInfoStruct> {
    private static readonly pb::MessageParser<GoodsInfoStruct> _parser = new pb::MessageParser<GoodsInfoStruct>(() => new GoodsInfoStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GoodsInfoStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsInfoStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsInfoStruct(GoodsInfoStruct other) : this() {
      shopId_ = other.shopId_;
      todayBuyNum_ = other.todayBuyNum_;
      permanentBuyNum_ = other.permanentBuyNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsInfoStruct Clone() {
      return new GoodsInfoStruct(this);
    }

    /// <summary>Field number for the "ShopId" field.</summary>
    public const int ShopIdFieldNumber = 1;
    private int shopId_;
    /// <summary>
    /// 商店id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShopId {
      get { return shopId_; }
      set {
        shopId_ = value;
      }
    }

    /// <summary>Field number for the "TodayBuyNum" field.</summary>
    public const int TodayBuyNumFieldNumber = 2;
    private int todayBuyNum_;
    /// <summary>
    /// 今日已购数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TodayBuyNum {
      get { return todayBuyNum_; }
      set {
        todayBuyNum_ = value;
      }
    }

    /// <summary>Field number for the "PermanentBuyNum" field.</summary>
    public const int PermanentBuyNumFieldNumber = 3;
    private int permanentBuyNum_;
    /// <summary>
    /// 永久已购数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PermanentBuyNum {
      get { return permanentBuyNum_; }
      set {
        permanentBuyNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GoodsInfoStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GoodsInfoStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShopId != other.ShopId) return false;
      if (TodayBuyNum != other.TodayBuyNum) return false;
      if (PermanentBuyNum != other.PermanentBuyNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShopId != 0) hash ^= ShopId.GetHashCode();
      if (TodayBuyNum != 0) hash ^= TodayBuyNum.GetHashCode();
      if (PermanentBuyNum != 0) hash ^= PermanentBuyNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShopId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ShopId);
      }
      if (TodayBuyNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TodayBuyNum);
      }
      if (PermanentBuyNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PermanentBuyNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShopId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShopId);
      }
      if (TodayBuyNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TodayBuyNum);
      }
      if (PermanentBuyNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PermanentBuyNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GoodsInfoStruct other) {
      if (other == null) {
        return;
      }
      if (other.ShopId != 0) {
        ShopId = other.ShopId;
      }
      if (other.TodayBuyNum != 0) {
        TodayBuyNum = other.TodayBuyNum;
      }
      if (other.PermanentBuyNum != 0) {
        PermanentBuyNum = other.PermanentBuyNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShopId = input.ReadInt32();
            break;
          }
          case 16: {
            TodayBuyNum = input.ReadInt32();
            break;
          }
          case 24: {
            PermanentBuyNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 限购道具信息
  /// </summary>
  public sealed partial class SCPromotionsGoodsInfo : pb::IMessage<SCPromotionsGoodsInfo> {
    private static readonly pb::MessageParser<SCPromotionsGoodsInfo> _parser = new pb::MessageParser<SCPromotionsGoodsInfo>(() => new SCPromotionsGoodsInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPromotionsGoodsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPromotionsGoodsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPromotionsGoodsInfo(SCPromotionsGoodsInfo other) : this() {
      promotionsGoods_ = other.promotionsGoods_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPromotionsGoodsInfo Clone() {
      return new SCPromotionsGoodsInfo(this);
    }

    /// <summary>Field number for the "PromotionsGoods" field.</summary>
    public const int PromotionsGoodsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.GoodsInfoStruct> _repeated_promotionsGoods_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.GoodsInfoStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.GoodsInfoStruct> promotionsGoods_ = new pbc::RepeatedField<global::Game.Protocal.GoodsInfoStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.GoodsInfoStruct> PromotionsGoods {
      get { return promotionsGoods_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPromotionsGoodsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPromotionsGoodsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!promotionsGoods_.Equals(other.promotionsGoods_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= promotionsGoods_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      promotionsGoods_.WriteTo(output, _repeated_promotionsGoods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += promotionsGoods_.CalculateSize(_repeated_promotionsGoods_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPromotionsGoodsInfo other) {
      if (other == null) {
        return;
      }
      promotionsGoods_.Add(other.promotionsGoods_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            promotionsGoods_.AddEntriesFrom(input, _repeated_promotionsGoods_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 使用道具
  /// </summary>
  public sealed partial class CSUseWarehouseGoods : pb::IMessage<CSUseWarehouseGoods> {
    private static readonly pb::MessageParser<CSUseWarehouseGoods> _parser = new pb::MessageParser<CSUseWarehouseGoods>(() => new CSUseWarehouseGoods());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSUseWarehouseGoods> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUseWarehouseGoods() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUseWarehouseGoods(CSUseWarehouseGoods other) : this() {
      goodsId_ = other.goodsId_;
      goodNum_ = other.goodNum_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUseWarehouseGoods Clone() {
      return new CSUseWarehouseGoods(this);
    }

    /// <summary>Field number for the "GoodsId" field.</summary>
    public const int GoodsIdFieldNumber = 1;
    private int goodsId_;
    /// <summary>
    /// 道具id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodsId {
      get { return goodsId_; }
      set {
        goodsId_ = value;
      }
    }

    /// <summary>Field number for the "GoodNum" field.</summary>
    public const int GoodNumFieldNumber = 2;
    private int goodNum_;
    /// <summary>
    /// 道具数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodNum {
      get { return goodNum_; }
      set {
        goodNum_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    /// <summary>
    /// 话筒内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSUseWarehouseGoods);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSUseWarehouseGoods other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GoodsId != other.GoodsId) return false;
      if (GoodNum != other.GoodNum) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GoodsId != 0) hash ^= GoodsId.GetHashCode();
      if (GoodNum != 0) hash ^= GoodNum.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GoodsId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GoodsId);
      }
      if (GoodNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GoodNum);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GoodsId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodsId);
      }
      if (GoodNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodNum);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSUseWarehouseGoods other) {
      if (other == null) {
        return;
      }
      if (other.GoodsId != 0) {
        GoodsId = other.GoodsId;
      }
      if (other.GoodNum != 0) {
        GoodNum = other.GoodNum;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GoodsId = input.ReadInt32();
            break;
          }
          case 16: {
            GoodNum = input.ReadInt32();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 使用道具返回
  /// </summary>
  public sealed partial class SCUseWarehouseGoods : pb::IMessage<SCUseWarehouseGoods> {
    private static readonly pb::MessageParser<SCUseWarehouseGoods> _parser = new pb::MessageParser<SCUseWarehouseGoods>(() => new SCUseWarehouseGoods());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUseWarehouseGoods> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUseWarehouseGoods() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUseWarehouseGoods(SCUseWarehouseGoods other) : this() {
      getGoodsInfo_ = other.getGoodsInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUseWarehouseGoods Clone() {
      return new SCUseWarehouseGoods(this);
    }

    /// <summary>Field number for the "GetGoodsInfo" field.</summary>
    public const int GetGoodsInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.SCBuyGoodsStruct> _repeated_getGoodsInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.SCBuyGoodsStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.SCBuyGoodsStruct> getGoodsInfo_ = new pbc::RepeatedField<global::Game.Protocal.SCBuyGoodsStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.SCBuyGoodsStruct> GetGoodsInfo {
      get { return getGoodsInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUseWarehouseGoods);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUseWarehouseGoods other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!getGoodsInfo_.Equals(other.getGoodsInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= getGoodsInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      getGoodsInfo_.WriteTo(output, _repeated_getGoodsInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += getGoodsInfo_.CalculateSize(_repeated_getGoodsInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUseWarehouseGoods other) {
      if (other == null) {
        return;
      }
      getGoodsInfo_.Add(other.getGoodsInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            getGoodsInfo_.AddEntriesFrom(input, _repeated_getGoodsInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 使用仓库宝箱
  /// </summary>
  public sealed partial class CSTreasureChest : pb::IMessage<CSTreasureChest> {
    private static readonly pb::MessageParser<CSTreasureChest> _parser = new pb::MessageParser<CSTreasureChest>(() => new CSTreasureChest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSTreasureChest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTreasureChest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTreasureChest(CSTreasureChest other) : this() {
      consumptionType_ = other.consumptionType_;
      goodId_ = other.goodId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTreasureChest Clone() {
      return new CSTreasureChest(this);
    }

    /// <summary>Field number for the "ConsumptionType" field.</summary>
    public const int ConsumptionTypeFieldNumber = 1;
    private global::Game.Protocal.UnlockTreasureChest consumptionType_ = 0;
    /// <summary>
    /// 消费类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Game.Protocal.UnlockTreasureChest ConsumptionType {
      get { return consumptionType_; }
      set {
        consumptionType_ = value;
      }
    }

    /// <summary>Field number for the "GoodId" field.</summary>
    public const int GoodIdFieldNumber = 2;
    private int goodId_;
    /// <summary>
    /// 宝箱id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodId {
      get { return goodId_; }
      set {
        goodId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSTreasureChest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSTreasureChest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumptionType != other.ConsumptionType) return false;
      if (GoodId != other.GoodId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumptionType != 0) hash ^= ConsumptionType.GetHashCode();
      if (GoodId != 0) hash ^= GoodId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConsumptionType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ConsumptionType);
      }
      if (GoodId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GoodId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsumptionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ConsumptionType);
      }
      if (GoodId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSTreasureChest other) {
      if (other == null) {
        return;
      }
      if (other.ConsumptionType != 0) {
        ConsumptionType = other.ConsumptionType;
      }
      if (other.GoodId != 0) {
        GoodId = other.GoodId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumptionType = (global::Game.Protocal.UnlockTreasureChest) input.ReadEnum();
            break;
          }
          case 16: {
            GoodId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取解锁仓库宝箱信息
  /// </summary>
  public sealed partial class SCTreasureChestUnlockInfo : pb::IMessage<SCTreasureChestUnlockInfo> {
    private static readonly pb::MessageParser<SCTreasureChestUnlockInfo> _parser = new pb::MessageParser<SCTreasureChestUnlockInfo>(() => new SCTreasureChestUnlockInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTreasureChestUnlockInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTreasureChestUnlockInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTreasureChestUnlockInfo(SCTreasureChestUnlockInfo other) : this() {
      unlockInfo_ = other.unlockInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTreasureChestUnlockInfo Clone() {
      return new SCTreasureChestUnlockInfo(this);
    }

    /// <summary>Field number for the "UnlockInfo" field.</summary>
    public const int UnlockInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.WarehouseBoxUnlockStruct> _repeated_unlockInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.WarehouseBoxUnlockStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.WarehouseBoxUnlockStruct> unlockInfo_ = new pbc::RepeatedField<global::Game.Protocal.WarehouseBoxUnlockStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.WarehouseBoxUnlockStruct> UnlockInfo {
      get { return unlockInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTreasureChestUnlockInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTreasureChestUnlockInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!unlockInfo_.Equals(other.unlockInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= unlockInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      unlockInfo_.WriteTo(output, _repeated_unlockInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += unlockInfo_.CalculateSize(_repeated_unlockInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTreasureChestUnlockInfo other) {
      if (other == null) {
        return;
      }
      unlockInfo_.Add(other.unlockInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            unlockInfo_.AddEntriesFrom(input, _repeated_unlockInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 仓库宝箱解锁信息结构
  /// </summary>
  public sealed partial class WarehouseBoxUnlockStruct : pb::IMessage<WarehouseBoxUnlockStruct> {
    private static readonly pb::MessageParser<WarehouseBoxUnlockStruct> _parser = new pb::MessageParser<WarehouseBoxUnlockStruct>(() => new WarehouseBoxUnlockStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WarehouseBoxUnlockStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WarehouseBoxUnlockStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WarehouseBoxUnlockStruct(WarehouseBoxUnlockStruct other) : this() {
      boxId_ = other.boxId_;
      unlockTime_ = other.unlockTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WarehouseBoxUnlockStruct Clone() {
      return new WarehouseBoxUnlockStruct(this);
    }

    /// <summary>Field number for the "BoxId" field.</summary>
    public const int BoxIdFieldNumber = 1;
    private int boxId_;
    /// <summary>
    /// 宝箱id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoxId {
      get { return boxId_; }
      set {
        boxId_ = value;
      }
    }

    /// <summary>Field number for the "UnlockTime" field.</summary>
    public const int UnlockTimeFieldNumber = 2;
    private long unlockTime_;
    /// <summary>
    /// 解锁时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnlockTime {
      get { return unlockTime_; }
      set {
        unlockTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WarehouseBoxUnlockStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WarehouseBoxUnlockStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BoxId != other.BoxId) return false;
      if (UnlockTime != other.UnlockTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BoxId != 0) hash ^= BoxId.GetHashCode();
      if (UnlockTime != 0L) hash ^= UnlockTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BoxId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BoxId);
      }
      if (UnlockTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UnlockTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BoxId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoxId);
      }
      if (UnlockTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnlockTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WarehouseBoxUnlockStruct other) {
      if (other == null) {
        return;
      }
      if (other.BoxId != 0) {
        BoxId = other.BoxId;
      }
      if (other.UnlockTime != 0L) {
        UnlockTime = other.UnlockTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BoxId = input.ReadInt32();
            break;
          }
          case 16: {
            UnlockTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  使用仓库宝箱结果
  /// </summary>
  public sealed partial class SCTreasureChestResult : pb::IMessage<SCTreasureChestResult> {
    private static readonly pb::MessageParser<SCTreasureChestResult> _parser = new pb::MessageParser<SCTreasureChestResult>(() => new SCTreasureChestResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTreasureChestResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTreasureChestResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTreasureChestResult(SCTreasureChestResult other) : this() {
      unlockTime_ = other.unlockTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTreasureChestResult Clone() {
      return new SCTreasureChestResult(this);
    }

    /// <summary>Field number for the "UnlockTime" field.</summary>
    public const int UnlockTimeFieldNumber = 1;
    private long unlockTime_;
    /// <summary>
    /// 解锁时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnlockTime {
      get { return unlockTime_; }
      set {
        unlockTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTreasureChestResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTreasureChestResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnlockTime != other.UnlockTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnlockTime != 0L) hash ^= UnlockTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnlockTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UnlockTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnlockTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnlockTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTreasureChestResult other) {
      if (other == null) {
        return;
      }
      if (other.UnlockTime != 0L) {
        UnlockTime = other.UnlockTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnlockTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 点击领取宝箱
  /// </summary>
  public sealed partial class CSGetTreasureChestAward : pb::IMessage<CSGetTreasureChestAward> {
    private static readonly pb::MessageParser<CSGetTreasureChestAward> _parser = new pb::MessageParser<CSGetTreasureChestAward>(() => new CSGetTreasureChestAward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetTreasureChestAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTreasureChestAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTreasureChestAward(CSGetTreasureChestAward other) : this() {
      goodId_ = other.goodId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTreasureChestAward Clone() {
      return new CSGetTreasureChestAward(this);
    }

    /// <summary>Field number for the "GoodId" field.</summary>
    public const int GoodIdFieldNumber = 1;
    private int goodId_;
    /// <summary>
    /// 宝箱id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodId {
      get { return goodId_; }
      set {
        goodId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetTreasureChestAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetTreasureChestAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GoodId != other.GoodId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GoodId != 0) hash ^= GoodId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GoodId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GoodId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GoodId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetTreasureChestAward other) {
      if (other == null) {
        return;
      }
      if (other.GoodId != 0) {
        GoodId = other.GoodId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GoodId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 领取宝箱结果
  /// </summary>
  public sealed partial class SCGetTreasureChestAwardResult : pb::IMessage<SCGetTreasureChestAwardResult> {
    private static readonly pb::MessageParser<SCGetTreasureChestAwardResult> _parser = new pb::MessageParser<SCGetTreasureChestAwardResult>(() => new SCGetTreasureChestAwardResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGetTreasureChestAwardResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTreasureChestAwardResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTreasureChestAwardResult(SCGetTreasureChestAwardResult other) : this() {
      usePropInfo_ = other.usePropInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTreasureChestAwardResult Clone() {
      return new SCGetTreasureChestAwardResult(this);
    }

    /// <summary>Field number for the "UsePropInfo" field.</summary>
    public const int UsePropInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.CSWareHouseStruct> _repeated_usePropInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.CSWareHouseStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.CSWareHouseStruct> usePropInfo_ = new pbc::RepeatedField<global::Game.Protocal.CSWareHouseStruct>();
    /// <summary>
    /// 获得道具信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.CSWareHouseStruct> UsePropInfo {
      get { return usePropInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGetTreasureChestAwardResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGetTreasureChestAwardResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!usePropInfo_.Equals(other.usePropInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= usePropInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      usePropInfo_.WriteTo(output, _repeated_usePropInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += usePropInfo_.CalculateSize(_repeated_usePropInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGetTreasureChestAwardResult other) {
      if (other == null) {
        return;
      }
      usePropInfo_.Add(other.usePropInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            usePropInfo_.AddEntriesFrom(input, _repeated_usePropInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 仓库宝箱加速id
  /// </summary>
  public sealed partial class CSTreasureChestSpeed : pb::IMessage<CSTreasureChestSpeed> {
    private static readonly pb::MessageParser<CSTreasureChestSpeed> _parser = new pb::MessageParser<CSTreasureChestSpeed>(() => new CSTreasureChestSpeed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSTreasureChestSpeed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTreasureChestSpeed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTreasureChestSpeed(CSTreasureChestSpeed other) : this() {
      goodId_ = other.goodId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTreasureChestSpeed Clone() {
      return new CSTreasureChestSpeed(this);
    }

    /// <summary>Field number for the "GoodId" field.</summary>
    public const int GoodIdFieldNumber = 1;
    private int goodId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodId {
      get { return goodId_; }
      set {
        goodId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSTreasureChestSpeed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSTreasureChestSpeed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GoodId != other.GoodId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GoodId != 0) hash ^= GoodId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GoodId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GoodId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GoodId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSTreasureChestSpeed other) {
      if (other == null) {
        return;
      }
      if (other.GoodId != 0) {
        GoodId = other.GoodId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GoodId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 仓库宝箱加速后时间
  /// </summary>
  public sealed partial class SCTreasureChestSpeed : pb::IMessage<SCTreasureChestSpeed> {
    private static readonly pb::MessageParser<SCTreasureChestSpeed> _parser = new pb::MessageParser<SCTreasureChestSpeed>(() => new SCTreasureChestSpeed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTreasureChestSpeed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTreasureChestSpeed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTreasureChestSpeed(SCTreasureChestSpeed other) : this() {
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTreasureChestSpeed Clone() {
      return new SCTreasureChestSpeed(this);
    }

    /// <summary>Field number for the "Time" field.</summary>
    public const int TimeFieldNumber = 1;
    private long time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTreasureChestSpeed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTreasureChestSpeed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0L) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Time != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTreasureChestSpeed other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Time = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 购物车功能
  /// </summary>
  public sealed partial class CSBuyPropInfo : pb::IMessage<CSBuyPropInfo> {
    private static readonly pb::MessageParser<CSBuyPropInfo> _parser = new pb::MessageParser<CSBuyPropInfo>(() => new CSBuyPropInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSBuyPropInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.StagePropertyReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyPropInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyPropInfo(CSBuyPropInfo other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyPropInfo Clone() {
      return new CSBuyPropInfo(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.CSBuyProp> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.CSBuyProp.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.CSBuyProp> info_ = new pbc::RepeatedField<global::Game.Protocal.CSBuyProp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.CSBuyProp> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSBuyPropInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSBuyPropInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSBuyPropInfo other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
