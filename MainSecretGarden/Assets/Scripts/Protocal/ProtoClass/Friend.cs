// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Friend.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Game.Protocal {

  /// <summary>Holder for reflection information generated from Friend.proto</summary>
  public static partial class FriendReflection {

    #region Descriptor
    /// <summary>File descriptor for Friend.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FriendReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxGcmllbmQucHJvdG8SDUdhbWUuUHJvdG9jYWwiIQoIQ1NTZWFyY2gSFQoN",
            "U2VhcmNoQ29udGV4dBgBIAEoCSKXAQoOQ1NTZWFyY2hTdHJ1Y3QSCwoDVWlk",
            "GAEgASgDEhIKCkZyaWVuZE5hbWUYAiABKAkSGAoQRnJpZW5kRXhwZXJpZW5j",
            "ZRgDIAEoBRITCgtGcmllbmRJbWFnZRgEIAEoBRIOCgZPbmxpbmUYBSABKAgS",
            "DwoHSXNBcHBseRgGIAEoCBIUCgxJbWFnZUFkZHJlc3MYByABKAkiOQoIU0NT",
            "ZWFyY2gSLQoGU2VhcmNoGAEgAygLMh0uR2FtZS5Qcm90b2NhbC5DU1NlYXJj",
            "aFN0cnVjdCIfCgdDU0FwcGx5EhQKDE9wZXJhdGlvblVpZBgBIAEoAyIgCghD",
            "U0FjY2VwdBIUCgxPcGVyYXRpb25VaWQYASABKAMiIQoJQ1NSZXB1bHNlEhQK",
            "DE9wZXJhdGlvblVpZBgBIAEoAyIjCgtDU0RlbEZyaWVuZBIUCgxPcGVyYXRp",
            "b25VaWQYASABKAMihAEKDFNDRnJpZW5kSW5mbxILCgNVaWQYASABKAMSEgoK",
            "RnJpZW5kTmFtZRgCIAEoCRIYChBGcmllbmRFeHBlcmllbmNlGAMgASgFEhMK",
            "C0ZyaWVuZEltYWdlGAQgASgFEg4KBk9ubGluZRgFIAEoCBIUCgxJbWFnZUFk",
            "ZHJlc3MYBiABKAkiXgoMU0NGcmllbmRMaXN0EjMKDkZyaWVuZExpc3RJbmZv",
            "GAEgAygLMhsuR2FtZS5Qcm90b2NhbC5TQ0ZyaWVuZEluZm8SGQoRRnJpZW5k",
            "QW1vdW50TGltaXQYAiABKAUiSQoPU0NSZWNvbW1lbmRMaXN0EjYKEVJlY29t",
            "bWVuZExpc3RJbmZvGAEgAygLMhsuR2FtZS5Qcm90b2NhbC5TQ0ZyaWVuZElu",
            "Zm8iQQoLU0NBcHBseUxpc3QSMgoNQXBwbHlMaXN0SW5mbxgBIAMoCzIbLkdh",
            "bWUuUHJvdG9jYWwuU0NGcmllbmRJbmZvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSSearch), global::Game.Protocal.CSSearch.Parser, new[]{ "SearchContext" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSSearchStruct), global::Game.Protocal.CSSearchStruct.Parser, new[]{ "Uid", "FriendName", "FriendExperience", "FriendImage", "Online", "IsApply", "ImageAddress" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCSearch), global::Game.Protocal.SCSearch.Parser, new[]{ "Search" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSApply), global::Game.Protocal.CSApply.Parser, new[]{ "OperationUid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSAccept), global::Game.Protocal.CSAccept.Parser, new[]{ "OperationUid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSRepulse), global::Game.Protocal.CSRepulse.Parser, new[]{ "OperationUid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.CSDelFriend), global::Game.Protocal.CSDelFriend.Parser, new[]{ "OperationUid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCFriendInfo), global::Game.Protocal.SCFriendInfo.Parser, new[]{ "Uid", "FriendName", "FriendExperience", "FriendImage", "Online", "ImageAddress" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCFriendList), global::Game.Protocal.SCFriendList.Parser, new[]{ "FriendListInfo", "FriendAmountLimit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCRecommendList), global::Game.Protocal.SCRecommendList.Parser, new[]{ "RecommendListInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Protocal.SCApplyList), global::Game.Protocal.SCApplyList.Parser, new[]{ "ApplyListInfo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 搜索用户
  /// </summary>
  public sealed partial class CSSearch : pb::IMessage<CSSearch> {
    private static readonly pb::MessageParser<CSSearch> _parser = new pb::MessageParser<CSSearch>(() => new CSSearch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSearch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.FriendReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSearch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSearch(CSSearch other) : this() {
      searchContext_ = other.searchContext_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSearch Clone() {
      return new CSSearch(this);
    }

    /// <summary>Field number for the "SearchContext" field.</summary>
    public const int SearchContextFieldNumber = 1;
    private string searchContext_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchContext {
      get { return searchContext_; }
      set {
        searchContext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSearch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSearch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SearchContext != other.SearchContext) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SearchContext.Length != 0) hash ^= SearchContext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SearchContext.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SearchContext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SearchContext.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchContext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSearch other) {
      if (other == null) {
        return;
      }
      if (other.SearchContext.Length != 0) {
        SearchContext = other.SearchContext;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SearchContext = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 搜索结果结构
  /// </summary>
  public sealed partial class CSSearchStruct : pb::IMessage<CSSearchStruct> {
    private static readonly pb::MessageParser<CSSearchStruct> _parser = new pb::MessageParser<CSSearchStruct>(() => new CSSearchStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSearchStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.FriendReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSearchStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSearchStruct(CSSearchStruct other) : this() {
      uid_ = other.uid_;
      friendName_ = other.friendName_;
      friendExperience_ = other.friendExperience_;
      friendImage_ = other.friendImage_;
      online_ = other.online_;
      isApply_ = other.isApply_;
      imageAddress_ = other.imageAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSearchStruct Clone() {
      return new CSSearchStruct(this);
    }

    /// <summary>Field number for the "Uid" field.</summary>
    public const int UidFieldNumber = 1;
    private long uid_;
    /// <summary>
    /// uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "FriendName" field.</summary>
    public const int FriendNameFieldNumber = 2;
    private string friendName_ = "";
    /// <summary>
    /// 昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendName {
      get { return friendName_; }
      set {
        friendName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FriendExperience" field.</summary>
    public const int FriendExperienceFieldNumber = 3;
    private int friendExperience_;
    /// <summary>
    /// 当前经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendExperience {
      get { return friendExperience_; }
      set {
        friendExperience_ = value;
      }
    }

    /// <summary>Field number for the "FriendImage" field.</summary>
    public const int FriendImageFieldNumber = 4;
    private int friendImage_;
    /// <summary>
    /// 头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendImage {
      get { return friendImage_; }
      set {
        friendImage_ = value;
      }
    }

    /// <summary>Field number for the "Online" field.</summary>
    public const int OnlineFieldNumber = 5;
    private bool online_;
    /// <summary>
    /// 在线状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Online {
      get { return online_; }
      set {
        online_ = value;
      }
    }

    /// <summary>Field number for the "IsApply" field.</summary>
    public const int IsApplyFieldNumber = 6;
    private bool isApply_;
    /// <summary>
    /// 是否已申请
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsApply {
      get { return isApply_; }
      set {
        isApply_ = value;
      }
    }

    /// <summary>Field number for the "ImageAddress" field.</summary>
    public const int ImageAddressFieldNumber = 7;
    private string imageAddress_ = "";
    /// <summary>
    /// 用户自定义头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageAddress {
      get { return imageAddress_; }
      set {
        imageAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSearchStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSearchStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (FriendName != other.FriendName) return false;
      if (FriendExperience != other.FriendExperience) return false;
      if (FriendImage != other.FriendImage) return false;
      if (Online != other.Online) return false;
      if (IsApply != other.IsApply) return false;
      if (ImageAddress != other.ImageAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0L) hash ^= Uid.GetHashCode();
      if (FriendName.Length != 0) hash ^= FriendName.GetHashCode();
      if (FriendExperience != 0) hash ^= FriendExperience.GetHashCode();
      if (FriendImage != 0) hash ^= FriendImage.GetHashCode();
      if (Online != false) hash ^= Online.GetHashCode();
      if (IsApply != false) hash ^= IsApply.GetHashCode();
      if (ImageAddress.Length != 0) hash ^= ImageAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (FriendName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FriendName);
      }
      if (FriendExperience != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FriendExperience);
      }
      if (FriendImage != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FriendImage);
      }
      if (Online != false) {
        output.WriteRawTag(40);
        output.WriteBool(Online);
      }
      if (IsApply != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsApply);
      }
      if (ImageAddress.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ImageAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (FriendName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendName);
      }
      if (FriendExperience != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendExperience);
      }
      if (FriendImage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendImage);
      }
      if (Online != false) {
        size += 1 + 1;
      }
      if (IsApply != false) {
        size += 1 + 1;
      }
      if (ImageAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSearchStruct other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0L) {
        Uid = other.Uid;
      }
      if (other.FriendName.Length != 0) {
        FriendName = other.FriendName;
      }
      if (other.FriendExperience != 0) {
        FriendExperience = other.FriendExperience;
      }
      if (other.FriendImage != 0) {
        FriendImage = other.FriendImage;
      }
      if (other.Online != false) {
        Online = other.Online;
      }
      if (other.IsApply != false) {
        IsApply = other.IsApply;
      }
      if (other.ImageAddress.Length != 0) {
        ImageAddress = other.ImageAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            FriendName = input.ReadString();
            break;
          }
          case 24: {
            FriendExperience = input.ReadInt32();
            break;
          }
          case 32: {
            FriendImage = input.ReadInt32();
            break;
          }
          case 40: {
            Online = input.ReadBool();
            break;
          }
          case 48: {
            IsApply = input.ReadBool();
            break;
          }
          case 58: {
            ImageAddress = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 搜索结果
  /// </summary>
  public sealed partial class SCSearch : pb::IMessage<SCSearch> {
    private static readonly pb::MessageParser<SCSearch> _parser = new pb::MessageParser<SCSearch>(() => new SCSearch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSearch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.FriendReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSearch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSearch(SCSearch other) : this() {
      search_ = other.search_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSearch Clone() {
      return new SCSearch(this);
    }

    /// <summary>Field number for the "Search" field.</summary>
    public const int SearchFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.CSSearchStruct> _repeated_search_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.CSSearchStruct.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.CSSearchStruct> search_ = new pbc::RepeatedField<global::Game.Protocal.CSSearchStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.CSSearchStruct> Search {
      get { return search_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSearch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSearch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!search_.Equals(other.search_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= search_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      search_.WriteTo(output, _repeated_search_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += search_.CalculateSize(_repeated_search_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSearch other) {
      if (other == null) {
        return;
      }
      search_.Add(other.search_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            search_.AddEntriesFrom(input, _repeated_search_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 申请添加
  /// </summary>
  public sealed partial class CSApply : pb::IMessage<CSApply> {
    private static readonly pb::MessageParser<CSApply> _parser = new pb::MessageParser<CSApply>(() => new CSApply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSApply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.FriendReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSApply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSApply(CSApply other) : this() {
      operationUid_ = other.operationUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSApply Clone() {
      return new CSApply(this);
    }

    /// <summary>Field number for the "OperationUid" field.</summary>
    public const int OperationUidFieldNumber = 1;
    private long operationUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OperationUid {
      get { return operationUid_; }
      set {
        operationUid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSApply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSApply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperationUid != other.OperationUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OperationUid != 0L) hash ^= OperationUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OperationUid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OperationUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OperationUid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OperationUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSApply other) {
      if (other == null) {
        return;
      }
      if (other.OperationUid != 0L) {
        OperationUid = other.OperationUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OperationUid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 接受添加
  /// </summary>
  public sealed partial class CSAccept : pb::IMessage<CSAccept> {
    private static readonly pb::MessageParser<CSAccept> _parser = new pb::MessageParser<CSAccept>(() => new CSAccept());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSAccept> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.FriendReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAccept() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAccept(CSAccept other) : this() {
      operationUid_ = other.operationUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAccept Clone() {
      return new CSAccept(this);
    }

    /// <summary>Field number for the "OperationUid" field.</summary>
    public const int OperationUidFieldNumber = 1;
    private long operationUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OperationUid {
      get { return operationUid_; }
      set {
        operationUid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSAccept);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSAccept other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperationUid != other.OperationUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OperationUid != 0L) hash ^= OperationUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OperationUid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OperationUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OperationUid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OperationUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSAccept other) {
      if (other == null) {
        return;
      }
      if (other.OperationUid != 0L) {
        OperationUid = other.OperationUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OperationUid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 拒绝添加
  /// </summary>
  public sealed partial class CSRepulse : pb::IMessage<CSRepulse> {
    private static readonly pb::MessageParser<CSRepulse> _parser = new pb::MessageParser<CSRepulse>(() => new CSRepulse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSRepulse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.FriendReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRepulse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRepulse(CSRepulse other) : this() {
      operationUid_ = other.operationUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRepulse Clone() {
      return new CSRepulse(this);
    }

    /// <summary>Field number for the "OperationUid" field.</summary>
    public const int OperationUidFieldNumber = 1;
    private long operationUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OperationUid {
      get { return operationUid_; }
      set {
        operationUid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSRepulse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSRepulse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperationUid != other.OperationUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OperationUid != 0L) hash ^= OperationUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OperationUid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OperationUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OperationUid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OperationUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSRepulse other) {
      if (other == null) {
        return;
      }
      if (other.OperationUid != 0L) {
        OperationUid = other.OperationUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OperationUid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 删除好友
  /// </summary>
  public sealed partial class CSDelFriend : pb::IMessage<CSDelFriend> {
    private static readonly pb::MessageParser<CSDelFriend> _parser = new pb::MessageParser<CSDelFriend>(() => new CSDelFriend());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSDelFriend> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.FriendReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDelFriend() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDelFriend(CSDelFriend other) : this() {
      operationUid_ = other.operationUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDelFriend Clone() {
      return new CSDelFriend(this);
    }

    /// <summary>Field number for the "OperationUid" field.</summary>
    public const int OperationUidFieldNumber = 1;
    private long operationUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OperationUid {
      get { return operationUid_; }
      set {
        operationUid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSDelFriend);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSDelFriend other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperationUid != other.OperationUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OperationUid != 0L) hash ^= OperationUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OperationUid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OperationUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OperationUid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OperationUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSDelFriend other) {
      if (other == null) {
        return;
      }
      if (other.OperationUid != 0L) {
        OperationUid = other.OperationUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OperationUid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 好友列表单个结构
  /// </summary>
  public sealed partial class SCFriendInfo : pb::IMessage<SCFriendInfo> {
    private static readonly pb::MessageParser<SCFriendInfo> _parser = new pb::MessageParser<SCFriendInfo>(() => new SCFriendInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCFriendInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.FriendReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendInfo(SCFriendInfo other) : this() {
      uid_ = other.uid_;
      friendName_ = other.friendName_;
      friendExperience_ = other.friendExperience_;
      friendImage_ = other.friendImage_;
      online_ = other.online_;
      imageAddress_ = other.imageAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendInfo Clone() {
      return new SCFriendInfo(this);
    }

    /// <summary>Field number for the "Uid" field.</summary>
    public const int UidFieldNumber = 1;
    private long uid_;
    /// <summary>
    /// uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "FriendName" field.</summary>
    public const int FriendNameFieldNumber = 2;
    private string friendName_ = "";
    /// <summary>
    /// 昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendName {
      get { return friendName_; }
      set {
        friendName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FriendExperience" field.</summary>
    public const int FriendExperienceFieldNumber = 3;
    private int friendExperience_;
    /// <summary>
    /// 当前经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendExperience {
      get { return friendExperience_; }
      set {
        friendExperience_ = value;
      }
    }

    /// <summary>Field number for the "FriendImage" field.</summary>
    public const int FriendImageFieldNumber = 4;
    private int friendImage_;
    /// <summary>
    /// 头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendImage {
      get { return friendImage_; }
      set {
        friendImage_ = value;
      }
    }

    /// <summary>Field number for the "Online" field.</summary>
    public const int OnlineFieldNumber = 5;
    private bool online_;
    /// <summary>
    /// 在线状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Online {
      get { return online_; }
      set {
        online_ = value;
      }
    }

    /// <summary>Field number for the "ImageAddress" field.</summary>
    public const int ImageAddressFieldNumber = 6;
    private string imageAddress_ = "";
    /// <summary>
    /// 用户自定义头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageAddress {
      get { return imageAddress_; }
      set {
        imageAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCFriendInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCFriendInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (FriendName != other.FriendName) return false;
      if (FriendExperience != other.FriendExperience) return false;
      if (FriendImage != other.FriendImage) return false;
      if (Online != other.Online) return false;
      if (ImageAddress != other.ImageAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0L) hash ^= Uid.GetHashCode();
      if (FriendName.Length != 0) hash ^= FriendName.GetHashCode();
      if (FriendExperience != 0) hash ^= FriendExperience.GetHashCode();
      if (FriendImage != 0) hash ^= FriendImage.GetHashCode();
      if (Online != false) hash ^= Online.GetHashCode();
      if (ImageAddress.Length != 0) hash ^= ImageAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (FriendName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FriendName);
      }
      if (FriendExperience != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FriendExperience);
      }
      if (FriendImage != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FriendImage);
      }
      if (Online != false) {
        output.WriteRawTag(40);
        output.WriteBool(Online);
      }
      if (ImageAddress.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ImageAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (FriendName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendName);
      }
      if (FriendExperience != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendExperience);
      }
      if (FriendImage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendImage);
      }
      if (Online != false) {
        size += 1 + 1;
      }
      if (ImageAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCFriendInfo other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0L) {
        Uid = other.Uid;
      }
      if (other.FriendName.Length != 0) {
        FriendName = other.FriendName;
      }
      if (other.FriendExperience != 0) {
        FriendExperience = other.FriendExperience;
      }
      if (other.FriendImage != 0) {
        FriendImage = other.FriendImage;
      }
      if (other.Online != false) {
        Online = other.Online;
      }
      if (other.ImageAddress.Length != 0) {
        ImageAddress = other.ImageAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            FriendName = input.ReadString();
            break;
          }
          case 24: {
            FriendExperience = input.ReadInt32();
            break;
          }
          case 32: {
            FriendImage = input.ReadInt32();
            break;
          }
          case 40: {
            Online = input.ReadBool();
            break;
          }
          case 50: {
            ImageAddress = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 好友列表
  /// </summary>
  public sealed partial class SCFriendList : pb::IMessage<SCFriendList> {
    private static readonly pb::MessageParser<SCFriendList> _parser = new pb::MessageParser<SCFriendList>(() => new SCFriendList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCFriendList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.FriendReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendList(SCFriendList other) : this() {
      friendListInfo_ = other.friendListInfo_.Clone();
      friendAmountLimit_ = other.friendAmountLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFriendList Clone() {
      return new SCFriendList(this);
    }

    /// <summary>Field number for the "FriendListInfo" field.</summary>
    public const int FriendListInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.SCFriendInfo> _repeated_friendListInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.SCFriendInfo.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.SCFriendInfo> friendListInfo_ = new pbc::RepeatedField<global::Game.Protocal.SCFriendInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.SCFriendInfo> FriendListInfo {
      get { return friendListInfo_; }
    }

    /// <summary>Field number for the "FriendAmountLimit" field.</summary>
    public const int FriendAmountLimitFieldNumber = 2;
    private int friendAmountLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FriendAmountLimit {
      get { return friendAmountLimit_; }
      set {
        friendAmountLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCFriendList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCFriendList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!friendListInfo_.Equals(other.friendListInfo_)) return false;
      if (FriendAmountLimit != other.FriendAmountLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= friendListInfo_.GetHashCode();
      if (FriendAmountLimit != 0) hash ^= FriendAmountLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      friendListInfo_.WriteTo(output, _repeated_friendListInfo_codec);
      if (FriendAmountLimit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FriendAmountLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += friendListInfo_.CalculateSize(_repeated_friendListInfo_codec);
      if (FriendAmountLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FriendAmountLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCFriendList other) {
      if (other == null) {
        return;
      }
      friendListInfo_.Add(other.friendListInfo_);
      if (other.FriendAmountLimit != 0) {
        FriendAmountLimit = other.FriendAmountLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            friendListInfo_.AddEntriesFrom(input, _repeated_friendListInfo_codec);
            break;
          }
          case 16: {
            FriendAmountLimit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 推荐列表
  /// </summary>
  public sealed partial class SCRecommendList : pb::IMessage<SCRecommendList> {
    private static readonly pb::MessageParser<SCRecommendList> _parser = new pb::MessageParser<SCRecommendList>(() => new SCRecommendList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCRecommendList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.FriendReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRecommendList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRecommendList(SCRecommendList other) : this() {
      recommendListInfo_ = other.recommendListInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRecommendList Clone() {
      return new SCRecommendList(this);
    }

    /// <summary>Field number for the "RecommendListInfo" field.</summary>
    public const int RecommendListInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.SCFriendInfo> _repeated_recommendListInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.SCFriendInfo.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.SCFriendInfo> recommendListInfo_ = new pbc::RepeatedField<global::Game.Protocal.SCFriendInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.SCFriendInfo> RecommendListInfo {
      get { return recommendListInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCRecommendList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCRecommendList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!recommendListInfo_.Equals(other.recommendListInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= recommendListInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      recommendListInfo_.WriteTo(output, _repeated_recommendListInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += recommendListInfo_.CalculateSize(_repeated_recommendListInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCRecommendList other) {
      if (other == null) {
        return;
      }
      recommendListInfo_.Add(other.recommendListInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            recommendListInfo_.AddEntriesFrom(input, _repeated_recommendListInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 申请列表
  /// </summary>
  public sealed partial class SCApplyList : pb::IMessage<SCApplyList> {
    private static readonly pb::MessageParser<SCApplyList> _parser = new pb::MessageParser<SCApplyList>(() => new SCApplyList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCApplyList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.Protocal.FriendReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCApplyList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCApplyList(SCApplyList other) : this() {
      applyListInfo_ = other.applyListInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCApplyList Clone() {
      return new SCApplyList(this);
    }

    /// <summary>Field number for the "ApplyListInfo" field.</summary>
    public const int ApplyListInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Game.Protocal.SCFriendInfo> _repeated_applyListInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Game.Protocal.SCFriendInfo.Parser);
    private readonly pbc::RepeatedField<global::Game.Protocal.SCFriendInfo> applyListInfo_ = new pbc::RepeatedField<global::Game.Protocal.SCFriendInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Game.Protocal.SCFriendInfo> ApplyListInfo {
      get { return applyListInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCApplyList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCApplyList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!applyListInfo_.Equals(other.applyListInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= applyListInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      applyListInfo_.WriteTo(output, _repeated_applyListInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += applyListInfo_.CalculateSize(_repeated_applyListInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCApplyList other) {
      if (other == null) {
        return;
      }
      applyListInfo_.Add(other.applyListInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            applyListInfo_.AddEntriesFrom(input, _repeated_applyListInfo_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
